
/**
 * ResponsysWSServiceStub.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis2 version: 1.6.2  Built on : Apr 17, 2012 (05:33:49 IST)
 */
        package com.rsys.ws;

        

        /*
        *  ResponsysWSServiceStub java implementation
        */

        
        public class ResponsysWSServiceStub extends org.apache.axis2.client.Stub
        implements ResponsysWSService{
        protected org.apache.axis2.description.AxisOperation[] _operations;

        //hashmaps to keep the fault mapping
        private java.util.HashMap faultExceptionNameMap = new java.util.HashMap();
        private java.util.HashMap faultExceptionClassNameMap = new java.util.HashMap();
        private java.util.HashMap faultMessageMap = new java.util.HashMap();

        private static int counter = 0;

        private static synchronized java.lang.String getUniqueSuffix(){
            // reset the counter if it is greater than 99999
            if (counter > 99999){
                counter = 0;
            }
            counter = counter + 1; 
            return java.lang.Long.toString(java.lang.System.currentTimeMillis()) + "_" + counter;
        }

    
    private void populateAxisService() throws org.apache.axis2.AxisFault {

     //creating the Service with a unique name
     _service = new org.apache.axis2.description.AxisService("ResponsysWSService" + getUniqueSuffix());
     addAnonymousOperations();

        //creating the operations
        org.apache.axis2.description.AxisOperation __operation;

        _operations = new org.apache.axis2.description.AxisOperation[78];
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "getServerTimestamp"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[0]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "getJobRunStatus"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[1]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "listFolderObjects"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[2]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "getLaunchStatus"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[3]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "setDocumentContent"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[4]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "retrieveLinkRecords"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[5]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "login"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[6]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "deleteLinkRecords"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[7]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "moveContentLibraryItem"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[8]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "deleteContentLibraryFolder"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[9]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "setContentLibraryItem"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[10]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "deleteLinkTable"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[11]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "listContentLibraryFolders"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[12]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "copyContentLibraryItem"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[13]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "deleteListMembers"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[14]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "getLaunchesForCampaign"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[15]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "triggerCampaignMessage"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[16]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "createTable"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[17]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "retrieveListMembers"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[18]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "logout"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[19]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "createFolder"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[20]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "mergeTableRecordsWithPK"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[21]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "createContentLibraryFolder"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[22]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "createTableWithPK"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[23]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "getContentLibraryItem"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[24]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "deleteTable"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[25]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "mergeTriggerEmail"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[26]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "createContentLibraryItem"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[27]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "copy"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[28]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "createDocument"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[29]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "move"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[30]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "setDocumentImages"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[31]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "closeCampaign"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[32]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "deleteContentLibraryItem"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[33]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "getCampaignProperties"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[34]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "authenticateServer"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[35]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "mergeLinkRecords"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[36]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "createCampaign"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[37]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "mergeTableRecords"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[38]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "launchCampaign"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[39]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "retrieveProfileExtensionRecords"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[40]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "deleteDocument"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[41]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "scheduleCampaignLaunch"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[42]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "setCampaignProperties"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[43]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "haMergeTriggerEmail"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[44]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "deleteList"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[45]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "createProfileExtensionTable"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[46]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "createSQLView"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[47]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "getDocumentContent"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[48]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "getJobRuns"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[49]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "truncateTable"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[50]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "unscheduleCampaignLaunch"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[51]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "describeObjects"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[52]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "changeTableSchema"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[53]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "haMergeTriggerSms"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[54]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "triggerCustomEvent"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[55]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "runJob"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[56]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "deleteTableRecords"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[57]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "listFolders"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[58]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "doesContentLibraryFolderExist"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[59]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "getOpenLaunches"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[60]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "mergeIntoProfileExtension"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[61]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "createLinkTable"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[62]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "getJobRunLog"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[63]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "deleteCampaign"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[64]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "getCampaignId"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[65]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "mergeListMembers"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[66]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "createList"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[67]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "loginWithCertificate"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[68]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "deleteProfileExtensionMembers"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[69]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "retrieveTableRecords"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[70]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "changeListSchema"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[71]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "getDocumentImages"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[72]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "getJobs"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[73]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "mergeListMembersRIID"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[74]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "getUpdated"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[75]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "mergeTriggerSMS"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[76]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("urn:ws.rsys.com", "deleteFolder"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[77]=__operation;
            
        
        }

    //populates the faults
    private void populateFaults(){
         
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getServerTimestamp"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getServerTimestamp"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getServerTimestamp"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ConnectFault"), "getJobRunStatus"),"com.rsys.ws.ConnectFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ConnectFault"), "getJobRunStatus"),"com.rsys.ws.ConnectFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ConnectFault"), "getJobRunStatus"),"com.rsys.ws.fault.ConnectFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getJobRunStatus"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getJobRunStatus"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getJobRunStatus"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","FolderFault"), "listFolderObjects"),"com.rsys.ws.FolderFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","FolderFault"), "listFolderObjects"),"com.rsys.ws.FolderFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","FolderFault"), "listFolderObjects"),"com.rsys.ws.fault.FolderFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "listFolderObjects"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "listFolderObjects"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "listFolderObjects"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "getLaunchStatus"),"com.rsys.ws.CampaignFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "getLaunchStatus"),"com.rsys.ws.CampaignFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "getLaunchStatus"),"com.rsys.ws.fault.CampaignFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getLaunchStatus"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getLaunchStatus"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getLaunchStatus"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "setDocumentContent"),"com.rsys.ws.DocumentFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "setDocumentContent"),"com.rsys.ws.DocumentFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "setDocumentContent"),"com.rsys.ws.fault.DocumentFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "setDocumentContent"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "setDocumentContent"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "setDocumentContent"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","LinkTableFault"), "retrieveLinkRecords"),"com.rsys.ws.LinkTableFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","LinkTableFault"), "retrieveLinkRecords"),"com.rsys.ws.LinkTableFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","LinkTableFault"), "retrieveLinkRecords"),"com.rsys.ws.fault.LinkTableFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "retrieveLinkRecords"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "retrieveLinkRecords"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "retrieveLinkRecords"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "login"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "login"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "login"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","AccountFault"), "login"),"com.rsys.ws.AccountFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","AccountFault"), "login"),"com.rsys.ws.AccountFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","AccountFault"), "login"),"com.rsys.ws.fault.AccountFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","LinkTableFault"), "deleteLinkRecords"),"com.rsys.ws.LinkTableFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","LinkTableFault"), "deleteLinkRecords"),"com.rsys.ws.LinkTableFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","LinkTableFault"), "deleteLinkRecords"),"com.rsys.ws.fault.LinkTableFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteLinkRecords"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteLinkRecords"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteLinkRecords"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "moveContentLibraryItem"),"com.rsys.ws.DocumentFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "moveContentLibraryItem"),"com.rsys.ws.DocumentFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "moveContentLibraryItem"),"com.rsys.ws.fault.DocumentFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "moveContentLibraryItem"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "moveContentLibraryItem"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "moveContentLibraryItem"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","FolderFault"), "deleteContentLibraryFolder"),"com.rsys.ws.FolderFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","FolderFault"), "deleteContentLibraryFolder"),"com.rsys.ws.FolderFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","FolderFault"), "deleteContentLibraryFolder"),"com.rsys.ws.fault.FolderFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteContentLibraryFolder"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteContentLibraryFolder"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteContentLibraryFolder"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "setContentLibraryItem"),"com.rsys.ws.DocumentFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "setContentLibraryItem"),"com.rsys.ws.DocumentFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "setContentLibraryItem"),"com.rsys.ws.fault.DocumentFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "setContentLibraryItem"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "setContentLibraryItem"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "setContentLibraryItem"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","LinkTableFault"), "deleteLinkTable"),"com.rsys.ws.LinkTableFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","LinkTableFault"), "deleteLinkTable"),"com.rsys.ws.LinkTableFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","LinkTableFault"), "deleteLinkTable"),"com.rsys.ws.fault.LinkTableFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteLinkTable"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteLinkTable"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteLinkTable"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","FolderFault"), "listContentLibraryFolders"),"com.rsys.ws.FolderFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","FolderFault"), "listContentLibraryFolders"),"com.rsys.ws.FolderFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","FolderFault"), "listContentLibraryFolders"),"com.rsys.ws.fault.FolderFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "listContentLibraryFolders"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "listContentLibraryFolders"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "listContentLibraryFolders"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "copyContentLibraryItem"),"com.rsys.ws.DocumentFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "copyContentLibraryItem"),"com.rsys.ws.DocumentFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "copyContentLibraryItem"),"com.rsys.ws.fault.DocumentFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "copyContentLibraryItem"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "copyContentLibraryItem"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "copyContentLibraryItem"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "deleteListMembers"),"com.rsys.ws.ListFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "deleteListMembers"),"com.rsys.ws.ListFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "deleteListMembers"),"com.rsys.ws.fault.ListFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteListMembers"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteListMembers"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteListMembers"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "getLaunchesForCampaign"),"com.rsys.ws.CampaignFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "getLaunchesForCampaign"),"com.rsys.ws.CampaignFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "getLaunchesForCampaign"),"com.rsys.ws.fault.CampaignFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getLaunchesForCampaign"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getLaunchesForCampaign"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getLaunchesForCampaign"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DuplicateApiRequestFault"), "triggerCampaignMessage"),"com.rsys.ws.DuplicateApiRequestFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DuplicateApiRequestFault"), "triggerCampaignMessage"),"com.rsys.ws.DuplicateApiRequestFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DuplicateApiRequestFault"), "triggerCampaignMessage"),"com.rsys.ws.fault.DuplicateApiRequestFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "triggerCampaignMessage"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "triggerCampaignMessage"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "triggerCampaignMessage"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TriggeredMessageFault"), "triggerCampaignMessage"),"com.rsys.ws.TriggeredMessageFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TriggeredMessageFault"), "triggerCampaignMessage"),"com.rsys.ws.TriggeredMessageFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TriggeredMessageFault"), "triggerCampaignMessage"),"com.rsys.ws.fault.TriggeredMessageFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createTable"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createTable"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createTable"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "createTable"),"com.rsys.ws.TableFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "createTable"),"com.rsys.ws.TableFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "createTable"),"com.rsys.ws.fault.TableFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "retrieveListMembers"),"com.rsys.ws.ListFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "retrieveListMembers"),"com.rsys.ws.ListFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "retrieveListMembers"),"com.rsys.ws.fault.ListFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "retrieveListMembers"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "retrieveListMembers"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "retrieveListMembers"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "logout"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "logout"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "logout"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","FolderFault"), "createFolder"),"com.rsys.ws.FolderFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","FolderFault"), "createFolder"),"com.rsys.ws.FolderFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","FolderFault"), "createFolder"),"com.rsys.ws.fault.FolderFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createFolder"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createFolder"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createFolder"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "mergeTableRecordsWithPK"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "mergeTableRecordsWithPK"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "mergeTableRecordsWithPK"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "mergeTableRecordsWithPK"),"com.rsys.ws.TableFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "mergeTableRecordsWithPK"),"com.rsys.ws.TableFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "mergeTableRecordsWithPK"),"com.rsys.ws.fault.TableFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","FolderFault"), "createContentLibraryFolder"),"com.rsys.ws.FolderFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","FolderFault"), "createContentLibraryFolder"),"com.rsys.ws.FolderFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","FolderFault"), "createContentLibraryFolder"),"com.rsys.ws.fault.FolderFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createContentLibraryFolder"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createContentLibraryFolder"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createContentLibraryFolder"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createTableWithPK"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createTableWithPK"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createTableWithPK"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "createTableWithPK"),"com.rsys.ws.TableFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "createTableWithPK"),"com.rsys.ws.TableFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "createTableWithPK"),"com.rsys.ws.fault.TableFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "getContentLibraryItem"),"com.rsys.ws.DocumentFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "getContentLibraryItem"),"com.rsys.ws.DocumentFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "getContentLibraryItem"),"com.rsys.ws.fault.DocumentFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getContentLibraryItem"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getContentLibraryItem"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getContentLibraryItem"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteTable"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteTable"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteTable"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "deleteTable"),"com.rsys.ws.TableFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "deleteTable"),"com.rsys.ws.TableFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "deleteTable"),"com.rsys.ws.fault.TableFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DuplicateApiRequestFault"), "mergeTriggerEmail"),"com.rsys.ws.DuplicateApiRequestFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DuplicateApiRequestFault"), "mergeTriggerEmail"),"com.rsys.ws.DuplicateApiRequestFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DuplicateApiRequestFault"), "mergeTriggerEmail"),"com.rsys.ws.fault.DuplicateApiRequestFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "mergeTriggerEmail"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "mergeTriggerEmail"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "mergeTriggerEmail"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TriggeredMessageFault"), "mergeTriggerEmail"),"com.rsys.ws.TriggeredMessageFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TriggeredMessageFault"), "mergeTriggerEmail"),"com.rsys.ws.TriggeredMessageFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TriggeredMessageFault"), "mergeTriggerEmail"),"com.rsys.ws.fault.TriggeredMessageFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "createContentLibraryItem"),"com.rsys.ws.DocumentFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "createContentLibraryItem"),"com.rsys.ws.DocumentFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "createContentLibraryItem"),"com.rsys.ws.fault.DocumentFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createContentLibraryItem"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createContentLibraryItem"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createContentLibraryItem"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "copy"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "copy"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "copy"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ObjectFault"), "copy"),"com.rsys.ws.ObjectFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ObjectFault"), "copy"),"com.rsys.ws.ObjectFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ObjectFault"), "copy"),"com.rsys.ws.fault.ObjectFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "createDocument"),"com.rsys.ws.DocumentFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "createDocument"),"com.rsys.ws.DocumentFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "createDocument"),"com.rsys.ws.fault.DocumentFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createDocument"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createDocument"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createDocument"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "move"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "move"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "move"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ObjectFault"), "move"),"com.rsys.ws.ObjectFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ObjectFault"), "move"),"com.rsys.ws.ObjectFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ObjectFault"), "move"),"com.rsys.ws.fault.ObjectFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "setDocumentImages"),"com.rsys.ws.DocumentFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "setDocumentImages"),"com.rsys.ws.DocumentFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "setDocumentImages"),"com.rsys.ws.fault.DocumentFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "setDocumentImages"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "setDocumentImages"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "setDocumentImages"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "closeCampaign"),"com.rsys.ws.CampaignFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "closeCampaign"),"com.rsys.ws.CampaignFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "closeCampaign"),"com.rsys.ws.fault.CampaignFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "closeCampaign"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "closeCampaign"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "closeCampaign"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "deleteContentLibraryItem"),"com.rsys.ws.DocumentFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "deleteContentLibraryItem"),"com.rsys.ws.DocumentFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "deleteContentLibraryItem"),"com.rsys.ws.fault.DocumentFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteContentLibraryItem"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteContentLibraryItem"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteContentLibraryItem"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "getCampaignProperties"),"com.rsys.ws.CampaignFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "getCampaignProperties"),"com.rsys.ws.CampaignFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "getCampaignProperties"),"com.rsys.ws.fault.CampaignFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getCampaignProperties"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getCampaignProperties"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getCampaignProperties"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "authenticateServer"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "authenticateServer"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "authenticateServer"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","AccountFault"), "authenticateServer"),"com.rsys.ws.AccountFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","AccountFault"), "authenticateServer"),"com.rsys.ws.AccountFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","AccountFault"), "authenticateServer"),"com.rsys.ws.fault.AccountFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","LinkTableFault"), "mergeLinkRecords"),"com.rsys.ws.LinkTableFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","LinkTableFault"), "mergeLinkRecords"),"com.rsys.ws.LinkTableFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","LinkTableFault"), "mergeLinkRecords"),"com.rsys.ws.fault.LinkTableFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "mergeLinkRecords"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "mergeLinkRecords"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "mergeLinkRecords"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "createCampaign"),"com.rsys.ws.CampaignFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "createCampaign"),"com.rsys.ws.CampaignFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "createCampaign"),"com.rsys.ws.fault.CampaignFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createCampaign"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createCampaign"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createCampaign"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "mergeTableRecords"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "mergeTableRecords"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "mergeTableRecords"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "mergeTableRecords"),"com.rsys.ws.TableFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "mergeTableRecords"),"com.rsys.ws.TableFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "mergeTableRecords"),"com.rsys.ws.fault.TableFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "launchCampaign"),"com.rsys.ws.CampaignFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "launchCampaign"),"com.rsys.ws.CampaignFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "launchCampaign"),"com.rsys.ws.fault.CampaignFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "launchCampaign"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "launchCampaign"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "launchCampaign"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "retrieveProfileExtensionRecords"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "retrieveProfileExtensionRecords"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "retrieveProfileExtensionRecords"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListExtensionFault"), "retrieveProfileExtensionRecords"),"com.rsys.ws.ListExtensionFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListExtensionFault"), "retrieveProfileExtensionRecords"),"com.rsys.ws.ListExtensionFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListExtensionFault"), "retrieveProfileExtensionRecords"),"com.rsys.ws.fault.ListExtensionFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "deleteDocument"),"com.rsys.ws.DocumentFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "deleteDocument"),"com.rsys.ws.DocumentFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "deleteDocument"),"com.rsys.ws.fault.DocumentFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteDocument"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteDocument"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteDocument"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "scheduleCampaignLaunch"),"com.rsys.ws.CampaignFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "scheduleCampaignLaunch"),"com.rsys.ws.CampaignFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "scheduleCampaignLaunch"),"com.rsys.ws.fault.CampaignFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "scheduleCampaignLaunch"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "scheduleCampaignLaunch"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "scheduleCampaignLaunch"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "setCampaignProperties"),"com.rsys.ws.CampaignFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "setCampaignProperties"),"com.rsys.ws.CampaignFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "setCampaignProperties"),"com.rsys.ws.fault.CampaignFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "setCampaignProperties"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "setCampaignProperties"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "setCampaignProperties"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DuplicateApiRequestFault"), "HaMergeTriggerEmail"),"com.rsys.ws.DuplicateApiRequestFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DuplicateApiRequestFault"), "HaMergeTriggerEmail"),"com.rsys.ws.DuplicateApiRequestFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DuplicateApiRequestFault"), "HaMergeTriggerEmail"),"com.rsys.ws.fault.DuplicateApiRequestFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnrecoverableErrorFault"), "HaMergeTriggerEmail"),"com.rsys.ws.UnrecoverableErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnrecoverableErrorFault"), "HaMergeTriggerEmail"),"com.rsys.ws.UnrecoverableErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnrecoverableErrorFault"), "HaMergeTriggerEmail"),"com.rsys.ws.fault.UnrecoverableErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "HaMergeTriggerEmail"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "HaMergeTriggerEmail"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "HaMergeTriggerEmail"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TriggeredMessageFault"), "HaMergeTriggerEmail"),"com.rsys.ws.TriggeredMessageFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TriggeredMessageFault"), "HaMergeTriggerEmail"),"com.rsys.ws.TriggeredMessageFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TriggeredMessageFault"), "HaMergeTriggerEmail"),"com.rsys.ws.fault.TriggeredMessageFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "deleteList"),"com.rsys.ws.ListFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "deleteList"),"com.rsys.ws.ListFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "deleteList"),"com.rsys.ws.fault.ListFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteList"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteList"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteList"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "createProfileExtensionTable"),"com.rsys.ws.ListFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "createProfileExtensionTable"),"com.rsys.ws.ListFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "createProfileExtensionTable"),"com.rsys.ws.fault.ListFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createSQLView"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createSQLView"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createSQLView"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "createSQLView"),"com.rsys.ws.TableFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "createSQLView"),"com.rsys.ws.TableFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "createSQLView"),"com.rsys.ws.fault.TableFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "getDocumentContent"),"com.rsys.ws.DocumentFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "getDocumentContent"),"com.rsys.ws.DocumentFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "getDocumentContent"),"com.rsys.ws.fault.DocumentFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getDocumentContent"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getDocumentContent"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getDocumentContent"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ConnectFault"), "getJobRuns"),"com.rsys.ws.ConnectFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ConnectFault"), "getJobRuns"),"com.rsys.ws.ConnectFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ConnectFault"), "getJobRuns"),"com.rsys.ws.fault.ConnectFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getJobRuns"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getJobRuns"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getJobRuns"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "truncateTable"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "truncateTable"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "truncateTable"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "truncateTable"),"com.rsys.ws.TableFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "truncateTable"),"com.rsys.ws.TableFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "truncateTable"),"com.rsys.ws.fault.TableFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "unscheduleCampaignLaunch"),"com.rsys.ws.CampaignFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "unscheduleCampaignLaunch"),"com.rsys.ws.CampaignFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "unscheduleCampaignLaunch"),"com.rsys.ws.fault.CampaignFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "unscheduleCampaignLaunch"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "unscheduleCampaignLaunch"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "unscheduleCampaignLaunch"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "describeObjects"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "describeObjects"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "describeObjects"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ObjectFault"), "describeObjects"),"com.rsys.ws.ObjectFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ObjectFault"), "describeObjects"),"com.rsys.ws.ObjectFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ObjectFault"), "describeObjects"),"com.rsys.ws.fault.ObjectFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "changeTableSchema"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "changeTableSchema"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "changeTableSchema"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "changeTableSchema"),"com.rsys.ws.TableFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "changeTableSchema"),"com.rsys.ws.TableFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "changeTableSchema"),"com.rsys.ws.fault.TableFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DuplicateApiRequestFault"), "HaMergeTriggerSms"),"com.rsys.ws.DuplicateApiRequestFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DuplicateApiRequestFault"), "HaMergeTriggerSms"),"com.rsys.ws.DuplicateApiRequestFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DuplicateApiRequestFault"), "HaMergeTriggerSms"),"com.rsys.ws.fault.DuplicateApiRequestFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnrecoverableErrorFault"), "HaMergeTriggerSms"),"com.rsys.ws.UnrecoverableErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnrecoverableErrorFault"), "HaMergeTriggerSms"),"com.rsys.ws.UnrecoverableErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnrecoverableErrorFault"), "HaMergeTriggerSms"),"com.rsys.ws.fault.UnrecoverableErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "HaMergeTriggerSms"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "HaMergeTriggerSms"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "HaMergeTriggerSms"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TriggeredMessageFault"), "HaMergeTriggerSms"),"com.rsys.ws.TriggeredMessageFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TriggeredMessageFault"), "HaMergeTriggerSms"),"com.rsys.ws.TriggeredMessageFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TriggeredMessageFault"), "HaMergeTriggerSms"),"com.rsys.ws.fault.TriggeredMessageFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CustomEventFault"), "triggerCustomEvent"),"com.rsys.ws.CustomEventFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CustomEventFault"), "triggerCustomEvent"),"com.rsys.ws.CustomEventFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CustomEventFault"), "triggerCustomEvent"),"com.rsys.ws.fault.CustomEventFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DuplicateApiRequestFault"), "triggerCustomEvent"),"com.rsys.ws.DuplicateApiRequestFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DuplicateApiRequestFault"), "triggerCustomEvent"),"com.rsys.ws.DuplicateApiRequestFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DuplicateApiRequestFault"), "triggerCustomEvent"),"com.rsys.ws.fault.DuplicateApiRequestFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "triggerCustomEvent"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "triggerCustomEvent"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "triggerCustomEvent"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ConnectFault"), "runJob"),"com.rsys.ws.ConnectFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ConnectFault"), "runJob"),"com.rsys.ws.ConnectFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ConnectFault"), "runJob"),"com.rsys.ws.fault.ConnectFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "runJob"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "runJob"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "runJob"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteTableRecords"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteTableRecords"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteTableRecords"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "deleteTableRecords"),"com.rsys.ws.TableFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "deleteTableRecords"),"com.rsys.ws.TableFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "deleteTableRecords"),"com.rsys.ws.fault.TableFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "listFolders"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "listFolders"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "listFolders"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","FolderFault"), "doesContentLibraryFolderExist"),"com.rsys.ws.FolderFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","FolderFault"), "doesContentLibraryFolderExist"),"com.rsys.ws.FolderFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","FolderFault"), "doesContentLibraryFolderExist"),"com.rsys.ws.fault.FolderFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "doesContentLibraryFolderExist"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "doesContentLibraryFolderExist"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "doesContentLibraryFolderExist"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getOpenLaunches"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getOpenLaunches"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getOpenLaunches"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","AccountFault"), "getOpenLaunches"),"com.rsys.ws.AccountFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","AccountFault"), "getOpenLaunches"),"com.rsys.ws.AccountFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","AccountFault"), "getOpenLaunches"),"com.rsys.ws.fault.AccountFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "mergeIntoProfileExtension"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "mergeIntoProfileExtension"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "mergeIntoProfileExtension"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListExtensionFault"), "mergeIntoProfileExtension"),"com.rsys.ws.ListExtensionFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListExtensionFault"), "mergeIntoProfileExtension"),"com.rsys.ws.ListExtensionFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListExtensionFault"), "mergeIntoProfileExtension"),"com.rsys.ws.fault.ListExtensionFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","LinkTableFault"), "createLinkTable"),"com.rsys.ws.LinkTableFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","LinkTableFault"), "createLinkTable"),"com.rsys.ws.LinkTableFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","LinkTableFault"), "createLinkTable"),"com.rsys.ws.fault.LinkTableFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createLinkTable"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createLinkTable"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createLinkTable"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ConnectFault"), "getJobRunLog"),"com.rsys.ws.ConnectFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ConnectFault"), "getJobRunLog"),"com.rsys.ws.ConnectFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ConnectFault"), "getJobRunLog"),"com.rsys.ws.fault.ConnectFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getJobRunLog"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getJobRunLog"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getJobRunLog"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "deleteCampaign"),"com.rsys.ws.CampaignFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "deleteCampaign"),"com.rsys.ws.CampaignFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "deleteCampaign"),"com.rsys.ws.fault.CampaignFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteCampaign"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteCampaign"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteCampaign"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "getCampaignId"),"com.rsys.ws.CampaignFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "getCampaignId"),"com.rsys.ws.CampaignFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","CampaignFault"), "getCampaignId"),"com.rsys.ws.fault.CampaignFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getCampaignId"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getCampaignId"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getCampaignId"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "mergeListMembers"),"com.rsys.ws.ListFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "mergeListMembers"),"com.rsys.ws.ListFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "mergeListMembers"),"com.rsys.ws.fault.ListFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "mergeListMembers"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "mergeListMembers"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "mergeListMembers"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "createList"),"com.rsys.ws.ListFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "createList"),"com.rsys.ws.ListFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "createList"),"com.rsys.ws.fault.ListFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createList"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createList"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "createList"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "loginWithCertificate"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "loginWithCertificate"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "loginWithCertificate"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","AccountFault"), "loginWithCertificate"),"com.rsys.ws.AccountFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","AccountFault"), "loginWithCertificate"),"com.rsys.ws.AccountFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","AccountFault"), "loginWithCertificate"),"com.rsys.ws.fault.AccountFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteProfileExtensionMembers"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteProfileExtensionMembers"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteProfileExtensionMembers"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListExtensionFault"), "deleteProfileExtensionMembers"),"com.rsys.ws.ListExtensionFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListExtensionFault"), "deleteProfileExtensionMembers"),"com.rsys.ws.ListExtensionFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListExtensionFault"), "deleteProfileExtensionMembers"),"com.rsys.ws.fault.ListExtensionFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "retrieveTableRecords"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "retrieveTableRecords"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "retrieveTableRecords"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "retrieveTableRecords"),"com.rsys.ws.TableFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "retrieveTableRecords"),"com.rsys.ws.TableFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TableFault"), "retrieveTableRecords"),"com.rsys.ws.fault.TableFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "changeListSchema"),"com.rsys.ws.ListFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "changeListSchema"),"com.rsys.ws.ListFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "changeListSchema"),"com.rsys.ws.fault.ListFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "changeListSchema"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "changeListSchema"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "changeListSchema"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "getDocumentImages"),"com.rsys.ws.DocumentFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "getDocumentImages"),"com.rsys.ws.DocumentFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DocumentFault"), "getDocumentImages"),"com.rsys.ws.fault.DocumentFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getDocumentImages"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getDocumentImages"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getDocumentImages"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ConnectFault"), "getJobs"),"com.rsys.ws.ConnectFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ConnectFault"), "getJobs"),"com.rsys.ws.ConnectFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ConnectFault"), "getJobs"),"com.rsys.ws.fault.ConnectFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getJobs"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getJobs"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getJobs"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "mergeListMembersRIID"),"com.rsys.ws.ListFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "mergeListMembersRIID"),"com.rsys.ws.ListFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "mergeListMembersRIID"),"com.rsys.ws.fault.ListFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "mergeListMembersRIID"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "mergeListMembersRIID"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "mergeListMembersRIID"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "getUpdated"),"com.rsys.ws.ListFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "getUpdated"),"com.rsys.ws.ListFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","ListFault"), "getUpdated"),"com.rsys.ws.fault.ListFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getUpdated"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getUpdated"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "getUpdated"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DuplicateApiRequestFault"), "mergeTriggerSMS"),"com.rsys.ws.DuplicateApiRequestFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DuplicateApiRequestFault"), "mergeTriggerSMS"),"com.rsys.ws.DuplicateApiRequestFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","DuplicateApiRequestFault"), "mergeTriggerSMS"),"com.rsys.ws.fault.DuplicateApiRequestFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "mergeTriggerSMS"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "mergeTriggerSMS"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "mergeTriggerSMS"),"com.rsys.ws.fault.UnexpectedErrorFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TriggeredMessageFault"), "mergeTriggerSMS"),"com.rsys.ws.TriggeredMessageFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TriggeredMessageFault"), "mergeTriggerSMS"),"com.rsys.ws.TriggeredMessageFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","TriggeredMessageFault"), "mergeTriggerSMS"),"com.rsys.ws.fault.TriggeredMessageFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","FolderFault"), "deleteFolder"),"com.rsys.ws.FolderFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","FolderFault"), "deleteFolder"),"com.rsys.ws.FolderFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","FolderFault"), "deleteFolder"),"com.rsys.ws.fault.FolderFault");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteFolder"),"com.rsys.ws.UnexpectedErrorFault");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteFolder"),"com.rsys.ws.UnexpectedErrorFault");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("urn:fault.ws.rsys.com","UnexpectedErrorFault"), "deleteFolder"),"com.rsys.ws.fault.UnexpectedErrorFault");
           


    }

    /**
      *Constructor that takes in a configContext
      */

    public ResponsysWSServiceStub(org.apache.axis2.context.ConfigurationContext configurationContext,
       java.lang.String targetEndpoint)
       throws org.apache.axis2.AxisFault {
         this(configurationContext,targetEndpoint,false);
   }


   /**
     * Constructor that takes in a configContext  and useseperate listner
     */
   public ResponsysWSServiceStub(org.apache.axis2.context.ConfigurationContext configurationContext,
        java.lang.String targetEndpoint, boolean useSeparateListener)
        throws org.apache.axis2.AxisFault {
         //To populate AxisService
         populateAxisService();
         populateFaults();

        _serviceClient = new org.apache.axis2.client.ServiceClient(configurationContext,_service);
        
	
        _serviceClient.getOptions().setTo(new org.apache.axis2.addressing.EndpointReference(
                targetEndpoint));
        _serviceClient.getOptions().setUseSeparateListener(useSeparateListener);
        
    
    }

    /**
     * Default Constructor
     */
    public ResponsysWSServiceStub(org.apache.axis2.context.ConfigurationContext configurationContext) throws org.apache.axis2.AxisFault {
        
                    this(configurationContext,"https://ws5.responsys.net/webservices/services/ResponsysWSService" );
                
    }

    /**
     * Default Constructor
     */
    public ResponsysWSServiceStub() throws org.apache.axis2.AxisFault {
        
                    this("https://ws5.responsys.net/webservices/services/ResponsysWSService" );
                
    }

    /**
     * Constructor taking the target endpoint
     */
    public ResponsysWSServiceStub(java.lang.String targetEndpoint) throws org.apache.axis2.AxisFault {
        this(null,targetEndpoint);
    }



        
                    /**
                     * Auto generated method signature
                     * Get timestamp of the server.
                     * @see com.rsys.ws.ResponsysWSService#getServerTimestamp
                     * @param getServerTimestamp74
                    
                     * @param sessionHeader75
                    
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.GetServerTimestampResponse getServerTimestamp(

                            com.rsys.ws.GetServerTimestamp getServerTimestamp74,com.rsys.ws.SessionHeader sessionHeader75)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:getServerTimestampRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getServerTimestamp74,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getServerTimestamp")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getServerTimestamp"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader75!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader75 = toOM(sessionHeader75, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "getServerTimestamp")));
                                                    addHeader(omElementsessionHeader75,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.GetServerTimestampResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.GetServerTimestampResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getServerTimestamp"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getServerTimestamp"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getServerTimestamp"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Get the Status of a Connect Job Run.
                     * @see com.rsys.ws.ResponsysWSService#getJobRunStatus
                     * @param getJobRunStatus77
                    
                     * @param sessionHeader78
                    
                     * @throws com.rsys.ws.ConnectFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.GetJobRunStatusResponse getJobRunStatus(

                            com.rsys.ws.GetJobRunStatus getJobRunStatus77,com.rsys.ws.SessionHeader sessionHeader78)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.ConnectFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[1].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:getJobRunStatusRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getJobRunStatus77,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getJobRunStatus")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getJobRunStatus"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader78!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader78 = toOM(sessionHeader78, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "getJobRunStatus")));
                                                    addHeader(omElementsessionHeader78,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.GetJobRunStatusResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.GetJobRunStatusResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getJobRunStatus"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getJobRunStatus"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getJobRunStatus"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.ConnectFault){
                          throw (com.rsys.ws.ConnectFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * List the contents of a folder.
                     * @see com.rsys.ws.ResponsysWSService#listFolderObjects
                     * @param listFolderObjects80
                    
                     * @param sessionHeader81
                    
                     * @throws com.rsys.ws.FolderFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.ListFolderObjectsResponse listFolderObjects(

                            com.rsys.ws.ListFolderObjects listFolderObjects80,com.rsys.ws.SessionHeader sessionHeader81)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.FolderFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[2].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:listFolderObjectsRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    listFolderObjects80,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "listFolderObjects")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "listFolderObjects"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader81!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader81 = toOM(sessionHeader81, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "listFolderObjects")));
                                                    addHeader(omElementsessionHeader81,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.ListFolderObjectsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.ListFolderObjectsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"listFolderObjects"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"listFolderObjects"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"listFolderObjects"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.FolderFault){
                          throw (com.rsys.ws.FolderFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Gets the launch info given a launch Id.
                     * @see com.rsys.ws.ResponsysWSService#getLaunchStatus
                     * @param getLaunchStatus83
                    
                     * @param sessionHeader84
                    
                     * @throws com.rsys.ws.CampaignFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.GetLaunchStatusResponse getLaunchStatus(

                            com.rsys.ws.GetLaunchStatus getLaunchStatus83,com.rsys.ws.SessionHeader sessionHeader84)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.CampaignFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[3].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:getLaunchStatusRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getLaunchStatus83,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getLaunchStatus")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getLaunchStatus"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader84!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader84 = toOM(sessionHeader84, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "getLaunchStatus")));
                                                    addHeader(omElementsessionHeader84,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.GetLaunchStatusResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.GetLaunchStatusResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getLaunchStatus"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getLaunchStatus"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getLaunchStatus"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.CampaignFault){
                          throw (com.rsys.ws.CampaignFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Set content to a document.
                     * @see com.rsys.ws.ResponsysWSService#setDocumentContent
                     * @param setDocumentContent86
                    
                     * @param sessionHeader87
                    
                     * @throws com.rsys.ws.DocumentFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.SetDocumentContentResponse setDocumentContent(

                            com.rsys.ws.SetDocumentContent setDocumentContent86,com.rsys.ws.SessionHeader sessionHeader87)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.DocumentFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[4].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:setDocumentContentRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    setDocumentContent86,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "setDocumentContent")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "setDocumentContent"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader87!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader87 = toOM(sessionHeader87, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "setDocumentContent")));
                                                    addHeader(omElementsessionHeader87,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.SetDocumentContentResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.SetDocumentContentResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"setDocumentContent"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"setDocumentContent"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"setDocumentContent"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.DocumentFault){
                          throw (com.rsys.ws.DocumentFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Retrieves records from link table.
                     * @see com.rsys.ws.ResponsysWSService#retrieveLinkRecords
                     * @param retrieveLinkRecords89
                    
                     * @param sessionHeader90
                    
                     * @throws com.rsys.ws.LinkTableFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.RetrieveLinkRecordsResponse retrieveLinkRecords(

                            com.rsys.ws.RetrieveLinkRecords retrieveLinkRecords89,com.rsys.ws.SessionHeader sessionHeader90)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.LinkTableFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[5].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:retrieveLinkRecordsRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    retrieveLinkRecords89,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "retrieveLinkRecords")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "retrieveLinkRecords"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader90!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader90 = toOM(sessionHeader90, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "retrieveLinkRecords")));
                                                    addHeader(omElementsessionHeader90,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.RetrieveLinkRecordsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.RetrieveLinkRecordsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"retrieveLinkRecords"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"retrieveLinkRecords"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"retrieveLinkRecords"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.LinkTableFault){
                          throw (com.rsys.ws.LinkTableFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Login to the Responsys Web Services API.
                     * @see com.rsys.ws.ResponsysWSService#login
                     * @param login92
                    
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.AccountFault : 
                     */

                    

                            public  com.rsys.ws.LoginResponse login(

                            com.rsys.ws.Login login92)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.AccountFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[6].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:loginRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    login92,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "login")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "login"));
                                                
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.LoginResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.LoginResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"login"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"login"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"login"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.AccountFault){
                          throw (com.rsys.ws.AccountFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Deletes records from a link table.
                     * @see com.rsys.ws.ResponsysWSService#deleteLinkRecords
                     * @param deleteLinkRecords94
                    
                     * @param sessionHeader95
                    
                     * @throws com.rsys.ws.LinkTableFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.DeleteLinkRecordsResponse deleteLinkRecords(

                            com.rsys.ws.DeleteLinkRecords deleteLinkRecords94,com.rsys.ws.SessionHeader sessionHeader95)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.LinkTableFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[7].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:deleteLinkRecordsRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteLinkRecords94,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "deleteLinkRecords")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "deleteLinkRecords"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader95!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader95 = toOM(sessionHeader95, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "deleteLinkRecords")));
                                                    addHeader(omElementsessionHeader95,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.DeleteLinkRecordsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.DeleteLinkRecordsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteLinkRecords"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteLinkRecords"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteLinkRecords"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.LinkTableFault){
                          throw (com.rsys.ws.LinkTableFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Move asset in the Content Library.
                     * @see com.rsys.ws.ResponsysWSService#moveContentLibraryItem
                     * @param moveContentLibraryItem97
                    
                     * @param sessionHeader98
                    
                     * @throws com.rsys.ws.DocumentFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.MoveContentLibraryItemResponse moveContentLibraryItem(

                            com.rsys.ws.MoveContentLibraryItem moveContentLibraryItem97,com.rsys.ws.SessionHeader sessionHeader98)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.DocumentFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[8].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:moveContentLibraryItemRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    moveContentLibraryItem97,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "moveContentLibraryItem")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "moveContentLibraryItem"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader98!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader98 = toOM(sessionHeader98, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "moveContentLibraryItem")));
                                                    addHeader(omElementsessionHeader98,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.MoveContentLibraryItemResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.MoveContentLibraryItemResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"moveContentLibraryItem"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"moveContentLibraryItem"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"moveContentLibraryItem"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.DocumentFault){
                          throw (com.rsys.ws.DocumentFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Delete folder in the Content Library.
                     * @see com.rsys.ws.ResponsysWSService#deleteContentLibraryFolder
                     * @param deleteContentLibraryFolder100
                    
                     * @param sessionHeader101
                    
                     * @throws com.rsys.ws.FolderFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.DeleteContentLibraryFolderResponse deleteContentLibraryFolder(

                            com.rsys.ws.DeleteContentLibraryFolder deleteContentLibraryFolder100,com.rsys.ws.SessionHeader sessionHeader101)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.FolderFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[9].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:deleteContentLibraryFolderRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteContentLibraryFolder100,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "deleteContentLibraryFolder")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "deleteContentLibraryFolder"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader101!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader101 = toOM(sessionHeader101, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "deleteContentLibraryFolder")));
                                                    addHeader(omElementsessionHeader101,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.DeleteContentLibraryFolderResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.DeleteContentLibraryFolderResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteContentLibraryFolder"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteContentLibraryFolder"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteContentLibraryFolder"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.FolderFault){
                          throw (com.rsys.ws.FolderFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Update asset in the Content Library.
                     * @see com.rsys.ws.ResponsysWSService#setContentLibraryItem
                     * @param setContentLibraryItem103
                    
                     * @param sessionHeader104
                    
                     * @throws com.rsys.ws.DocumentFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.SetContentLibraryItemResponse setContentLibraryItem(

                            com.rsys.ws.SetContentLibraryItem setContentLibraryItem103,com.rsys.ws.SessionHeader sessionHeader104)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.DocumentFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[10].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:setContentLibraryItemRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    setContentLibraryItem103,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "setContentLibraryItem")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "setContentLibraryItem"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader104!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader104 = toOM(sessionHeader104, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "setContentLibraryItem")));
                                                    addHeader(omElementsessionHeader104,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.SetContentLibraryItemResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.SetContentLibraryItemResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"setContentLibraryItem"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"setContentLibraryItem"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"setContentLibraryItem"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.DocumentFault){
                          throw (com.rsys.ws.DocumentFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Deletes an existing link table.
                     * @see com.rsys.ws.ResponsysWSService#deleteLinkTable
                     * @param deleteLinkTable106
                    
                     * @param sessionHeader107
                    
                     * @throws com.rsys.ws.LinkTableFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.DeleteLinkTableResponse deleteLinkTable(

                            com.rsys.ws.DeleteLinkTable deleteLinkTable106,com.rsys.ws.SessionHeader sessionHeader107)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.LinkTableFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[11].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:deleteLinkTableRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteLinkTable106,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "deleteLinkTable")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "deleteLinkTable"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader107!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader107 = toOM(sessionHeader107, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "deleteLinkTable")));
                                                    addHeader(omElementsessionHeader107,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.DeleteLinkTableResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.DeleteLinkTableResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteLinkTable"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteLinkTable"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteLinkTable"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.LinkTableFault){
                          throw (com.rsys.ws.LinkTableFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * List folders in the Content Library.
                     * @see com.rsys.ws.ResponsysWSService#listContentLibraryFolders
                     * @param listContentLibraryFolders109
                    
                     * @param sessionHeader110
                    
                     * @throws com.rsys.ws.FolderFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.ListContentLibraryFoldersResponse listContentLibraryFolders(

                            com.rsys.ws.ListContentLibraryFolders listContentLibraryFolders109,com.rsys.ws.SessionHeader sessionHeader110)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.FolderFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[12].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:listContentLibraryFoldersRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    listContentLibraryFolders109,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "listContentLibraryFolders")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "listContentLibraryFolders"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader110!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader110 = toOM(sessionHeader110, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "listContentLibraryFolders")));
                                                    addHeader(omElementsessionHeader110,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.ListContentLibraryFoldersResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.ListContentLibraryFoldersResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"listContentLibraryFolders"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"listContentLibraryFolders"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"listContentLibraryFolders"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.FolderFault){
                          throw (com.rsys.ws.FolderFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Copy asset in the Content Library.
                     * @see com.rsys.ws.ResponsysWSService#copyContentLibraryItem
                     * @param copyContentLibraryItem112
                    
                     * @param sessionHeader113
                    
                     * @throws com.rsys.ws.DocumentFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.CopyContentLibraryItemResponse copyContentLibraryItem(

                            com.rsys.ws.CopyContentLibraryItem copyContentLibraryItem112,com.rsys.ws.SessionHeader sessionHeader113)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.DocumentFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[13].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:copyContentLibraryItemRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    copyContentLibraryItem112,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "copyContentLibraryItem")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "copyContentLibraryItem"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader113!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader113 = toOM(sessionHeader113, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "copyContentLibraryItem")));
                                                    addHeader(omElementsessionHeader113,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.CopyContentLibraryItemResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.CopyContentLibraryItemResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"copyContentLibraryItem"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"copyContentLibraryItem"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"copyContentLibraryItem"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.DocumentFault){
                          throw (com.rsys.ws.DocumentFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Deletes recipients from a list.
                     * @see com.rsys.ws.ResponsysWSService#deleteListMembers
                     * @param deleteListMembers115
                    
                     * @param sessionHeader116
                    
                     * @throws com.rsys.ws.ListFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.DeleteListMembersResponse deleteListMembers(

                            com.rsys.ws.DeleteListMembers deleteListMembers115,com.rsys.ws.SessionHeader sessionHeader116)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.ListFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[14].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:deleteListMembersRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteListMembers115,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "deleteListMembers")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "deleteListMembers"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader116!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader116 = toOM(sessionHeader116, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "deleteListMembers")));
                                                    addHeader(omElementsessionHeader116,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.DeleteListMembersResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.DeleteListMembersResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteListMembers"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteListMembers"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteListMembers"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.ListFault){
                          throw (com.rsys.ws.ListFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Get the Launches for a given Campaign.
                     * @see com.rsys.ws.ResponsysWSService#getLaunchesForCampaign
                     * @param getLaunchesForCampaign118
                    
                     * @param sessionHeader119
                    
                     * @throws com.rsys.ws.CampaignFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.GetLaunchesForCampaignResponse getLaunchesForCampaign(

                            com.rsys.ws.GetLaunchesForCampaign getLaunchesForCampaign118,com.rsys.ws.SessionHeader sessionHeader119)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.CampaignFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[15].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:getLaunchesForCampaignRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getLaunchesForCampaign118,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getLaunchesForCampaign")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getLaunchesForCampaign"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader119!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader119 = toOM(sessionHeader119, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "getLaunchesForCampaign")));
                                                    addHeader(omElementsessionHeader119,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.GetLaunchesForCampaignResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.GetLaunchesForCampaignResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getLaunchesForCampaign"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getLaunchesForCampaign"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getLaunchesForCampaign"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.CampaignFault){
                          throw (com.rsys.ws.CampaignFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Send Triggered Message to 1 or more recipients.
                     * @see com.rsys.ws.ResponsysWSService#triggerCampaignMessage
                     * @param triggerCampaignMessage121
                    
                     * @param sessionHeader122
                    
                     * @throws com.rsys.ws.DuplicateApiRequestFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.TriggeredMessageFault : 
                     */

                    

                            public  com.rsys.ws.TriggerCampaignMessageResponse triggerCampaignMessage(

                            com.rsys.ws.TriggerCampaignMessage triggerCampaignMessage121,com.rsys.ws.SessionHeader sessionHeader122)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.DuplicateApiRequestFault
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.TriggeredMessageFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[16].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:triggerCampaignMessageRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    triggerCampaignMessage121,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "triggerCampaignMessage")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "triggerCampaignMessage"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader122!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader122 = toOM(sessionHeader122, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "triggerCampaignMessage")));
                                                    addHeader(omElementsessionHeader122,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.TriggerCampaignMessageResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.TriggerCampaignMessageResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"triggerCampaignMessage"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"triggerCampaignMessage"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"triggerCampaignMessage"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.DuplicateApiRequestFault){
                          throw (com.rsys.ws.DuplicateApiRequestFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.TriggeredMessageFault){
                          throw (com.rsys.ws.TriggeredMessageFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Creates an empty table.
                     * @see com.rsys.ws.ResponsysWSService#createTable
                     * @param createTable124
                    
                     * @param sessionHeader125
                    
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.TableFault : 
                     */

                    

                            public  com.rsys.ws.CreateTableResponse createTable(

                            com.rsys.ws.CreateTable createTable124,com.rsys.ws.SessionHeader sessionHeader125)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.TableFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[17].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:createTableRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createTable124,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "createTable")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "createTable"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader125!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader125 = toOM(sessionHeader125, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "createTable")));
                                                    addHeader(omElementsessionHeader125,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.CreateTableResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.CreateTableResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createTable"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createTable"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createTable"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.TableFault){
                          throw (com.rsys.ws.TableFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Retrieves recipients from a list.
                     * @see com.rsys.ws.ResponsysWSService#retrieveListMembers
                     * @param retrieveListMembers127
                    
                     * @param sessionHeader128
                    
                     * @throws com.rsys.ws.ListFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.RetrieveListMembersResponse retrieveListMembers(

                            com.rsys.ws.RetrieveListMembers retrieveListMembers127,com.rsys.ws.SessionHeader sessionHeader128)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.ListFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[18].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:retrieveListMembersRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    retrieveListMembers127,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "retrieveListMembers")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "retrieveListMembers"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader128!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader128 = toOM(sessionHeader128, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "retrieveListMembers")));
                                                    addHeader(omElementsessionHeader128,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.RetrieveListMembersResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.RetrieveListMembersResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"retrieveListMembers"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"retrieveListMembers"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"retrieveListMembers"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.ListFault){
                          throw (com.rsys.ws.ListFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Logout of the Responsys Web Services API.
                     * @see com.rsys.ws.ResponsysWSService#logout
                     * @param logout130
                    
                     * @param sessionHeader131
                    
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.LogoutResponse logout(

                            com.rsys.ws.Logout logout130,com.rsys.ws.SessionHeader sessionHeader131)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[19].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:logoutRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    logout130,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "logout")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "logout"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader131!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader131 = toOM(sessionHeader131, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "logout")));
                                                    addHeader(omElementsessionHeader131,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.LogoutResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.LogoutResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"logout"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"logout"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"logout"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Creates a new folder.
                     * @see com.rsys.ws.ResponsysWSService#createFolder
                     * @param createFolder133
                    
                     * @param sessionHeader134
                    
                     * @throws com.rsys.ws.FolderFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.CreateFolderResponse createFolder(

                            com.rsys.ws.CreateFolder createFolder133,com.rsys.ws.SessionHeader sessionHeader134)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.FolderFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[20].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:createFolderRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createFolder133,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "createFolder")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "createFolder"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader134!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader134 = toOM(sessionHeader134, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "createFolder")));
                                                    addHeader(omElementsessionHeader134,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.CreateFolderResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.CreateFolderResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createFolder"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createFolder"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createFolder"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.FolderFault){
                          throw (com.rsys.ws.FolderFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Merge data into a table using primary keys.
                     * @see com.rsys.ws.ResponsysWSService#mergeTableRecordsWithPK
                     * @param mergeTableRecordsWithPK136
                    
                     * @param sessionHeader137
                    
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.TableFault : 
                     */

                    

                            public  com.rsys.ws.MergeTableRecordsWithPKResponse mergeTableRecordsWithPK(

                            com.rsys.ws.MergeTableRecordsWithPK mergeTableRecordsWithPK136,com.rsys.ws.SessionHeader sessionHeader137)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.TableFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[21].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:mergeTableRecordsWithPKRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    mergeTableRecordsWithPK136,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "mergeTableRecordsWithPK")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "mergeTableRecordsWithPK"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader137!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader137 = toOM(sessionHeader137, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "mergeTableRecordsWithPK")));
                                                    addHeader(omElementsessionHeader137,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.MergeTableRecordsWithPKResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.MergeTableRecordsWithPKResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"mergeTableRecordsWithPK"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"mergeTableRecordsWithPK"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"mergeTableRecordsWithPK"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.TableFault){
                          throw (com.rsys.ws.TableFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Create folder in the Content Library.
                     * @see com.rsys.ws.ResponsysWSService#createContentLibraryFolder
                     * @param createContentLibraryFolder139
                    
                     * @param sessionHeader140
                    
                     * @throws com.rsys.ws.FolderFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.CreateContentLibraryFolderResponse createContentLibraryFolder(

                            com.rsys.ws.CreateContentLibraryFolder createContentLibraryFolder139,com.rsys.ws.SessionHeader sessionHeader140)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.FolderFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[22].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:createContentLibraryFolderRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createContentLibraryFolder139,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "createContentLibraryFolder")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "createContentLibraryFolder"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader140!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader140 = toOM(sessionHeader140, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "createContentLibraryFolder")));
                                                    addHeader(omElementsessionHeader140,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.CreateContentLibraryFolderResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.CreateContentLibraryFolderResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createContentLibraryFolder"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createContentLibraryFolder"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createContentLibraryFolder"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.FolderFault){
                          throw (com.rsys.ws.FolderFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Creates an empty table with primary keys.
                     * @see com.rsys.ws.ResponsysWSService#createTableWithPK
                     * @param createTableWithPK142
                    
                     * @param sessionHeader143
                    
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.TableFault : 
                     */

                    

                            public  com.rsys.ws.CreateTableWithPKResponse createTableWithPK(

                            com.rsys.ws.CreateTableWithPK createTableWithPK142,com.rsys.ws.SessionHeader sessionHeader143)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.TableFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[23].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:createTableWithPKRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createTableWithPK142,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "createTableWithPK")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "createTableWithPK"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader143!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader143 = toOM(sessionHeader143, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "createTableWithPK")));
                                                    addHeader(omElementsessionHeader143,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.CreateTableWithPKResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.CreateTableWithPKResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createTableWithPK"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createTableWithPK"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createTableWithPK"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.TableFault){
                          throw (com.rsys.ws.TableFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Get asset in the Content Library.
                     * @see com.rsys.ws.ResponsysWSService#getContentLibraryItem
                     * @param getContentLibraryItem145
                    
                     * @param sessionHeader146
                    
                     * @throws com.rsys.ws.DocumentFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.GetContentLibraryItemResponse getContentLibraryItem(

                            com.rsys.ws.GetContentLibraryItem getContentLibraryItem145,com.rsys.ws.SessionHeader sessionHeader146)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.DocumentFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[24].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:getContentLibraryItemRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getContentLibraryItem145,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getContentLibraryItem")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getContentLibraryItem"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader146!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader146 = toOM(sessionHeader146, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "getContentLibraryItem")));
                                                    addHeader(omElementsessionHeader146,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.GetContentLibraryItemResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.GetContentLibraryItemResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getContentLibraryItem"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getContentLibraryItem"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getContentLibraryItem"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.DocumentFault){
                          throw (com.rsys.ws.DocumentFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Deletes an existing table.
                     * @see com.rsys.ws.ResponsysWSService#deleteTable
                     * @param deleteTable148
                    
                     * @param sessionHeader149
                    
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.TableFault : 
                     */

                    

                            public  com.rsys.ws.DeleteTableResponse deleteTable(

                            com.rsys.ws.DeleteTable deleteTable148,com.rsys.ws.SessionHeader sessionHeader149)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.TableFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[25].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:deleteTableRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteTable148,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "deleteTable")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "deleteTable"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader149!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader149 = toOM(sessionHeader149, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "deleteTable")));
                                                    addHeader(omElementsessionHeader149,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.DeleteTableResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.DeleteTableResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteTable"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteTable"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteTable"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.TableFault){
                          throw (com.rsys.ws.TableFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Merge And Send Triggered Message for 1 or more
                recipients.
                     * @see com.rsys.ws.ResponsysWSService#mergeTriggerEmail
                     * @param mergeTriggerEmail151
                    
                     * @param sessionHeader152
                    
                     * @throws com.rsys.ws.DuplicateApiRequestFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.TriggeredMessageFault : 
                     */

                    

                            public  com.rsys.ws.MergeTriggerEmailResponse mergeTriggerEmail(

                            com.rsys.ws.MergeTriggerEmail mergeTriggerEmail151,com.rsys.ws.SessionHeader sessionHeader152)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.DuplicateApiRequestFault
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.TriggeredMessageFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[26].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:mergeTriggerEmailRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    mergeTriggerEmail151,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "mergeTriggerEmail")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "mergeTriggerEmail"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader152!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader152 = toOM(sessionHeader152, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "mergeTriggerEmail")));
                                                    addHeader(omElementsessionHeader152,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.MergeTriggerEmailResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.MergeTriggerEmailResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"mergeTriggerEmail"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"mergeTriggerEmail"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"mergeTriggerEmail"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.DuplicateApiRequestFault){
                          throw (com.rsys.ws.DuplicateApiRequestFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.TriggeredMessageFault){
                          throw (com.rsys.ws.TriggeredMessageFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Create asset in the Content Library.
                     * @see com.rsys.ws.ResponsysWSService#createContentLibraryItem
                     * @param createContentLibraryItem154
                    
                     * @param sessionHeader155
                    
                     * @throws com.rsys.ws.DocumentFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.CreateContentLibraryItemResponse createContentLibraryItem(

                            com.rsys.ws.CreateContentLibraryItem createContentLibraryItem154,com.rsys.ws.SessionHeader sessionHeader155)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.DocumentFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[27].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:createContentLibraryItemRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createContentLibraryItem154,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "createContentLibraryItem")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "createContentLibraryItem"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader155!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader155 = toOM(sessionHeader155, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "createContentLibraryItem")));
                                                    addHeader(omElementsessionHeader155,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.CreateContentLibraryItemResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.CreateContentLibraryItemResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createContentLibraryItem"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createContentLibraryItem"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createContentLibraryItem"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.DocumentFault){
                          throw (com.rsys.ws.DocumentFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Copying an object.
                     * @see com.rsys.ws.ResponsysWSService#copy
                     * @param copy157
                    
                     * @param sessionHeader158
                    
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.ObjectFault : 
                     */

                    

                            public  com.rsys.ws.CopyResponse copy(

                            com.rsys.ws.Copy copy157,com.rsys.ws.SessionHeader sessionHeader158)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.ObjectFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[28].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:copyRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    copy157,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "copy")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "copy"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader158!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader158 = toOM(sessionHeader158, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "copy")));
                                                    addHeader(omElementsessionHeader158,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.CopyResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.CopyResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"copy"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"copy"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"copy"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.ObjectFault){
                          throw (com.rsys.ws.ObjectFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Creates a document.
                     * @see com.rsys.ws.ResponsysWSService#createDocument
                     * @param createDocument160
                    
                     * @param sessionHeader161
                    
                     * @throws com.rsys.ws.DocumentFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.CreateDocumentResponse createDocument(

                            com.rsys.ws.CreateDocument createDocument160,com.rsys.ws.SessionHeader sessionHeader161)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.DocumentFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[29].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:createDocumentRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createDocument160,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "createDocument")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "createDocument"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader161!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader161 = toOM(sessionHeader161, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "createDocument")));
                                                    addHeader(omElementsessionHeader161,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.CreateDocumentResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.CreateDocumentResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createDocument"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createDocument"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createDocument"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.DocumentFault){
                          throw (com.rsys.ws.DocumentFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Moving an object.
                     * @see com.rsys.ws.ResponsysWSService#move
                     * @param move163
                    
                     * @param sessionHeader164
                    
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.ObjectFault : 
                     */

                    

                            public  com.rsys.ws.MoveResponse move(

                            com.rsys.ws.Move move163,com.rsys.ws.SessionHeader sessionHeader164)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.ObjectFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[30].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:moveRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    move163,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "move")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "move"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader164!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader164 = toOM(sessionHeader164, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "move")));
                                                    addHeader(omElementsessionHeader164,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.MoveResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.MoveResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"move"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"move"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"move"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.ObjectFault){
                          throw (com.rsys.ws.ObjectFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Set images to a document.
                     * @see com.rsys.ws.ResponsysWSService#setDocumentImages
                     * @param setDocumentImages166
                    
                     * @param sessionHeader167
                    
                     * @throws com.rsys.ws.DocumentFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.SetDocumentImagesResponse setDocumentImages(

                            com.rsys.ws.SetDocumentImages setDocumentImages166,com.rsys.ws.SessionHeader sessionHeader167)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.DocumentFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[31].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:setDocumentImagesRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    setDocumentImages166,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "setDocumentImages")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "setDocumentImages"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader167!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader167 = toOM(sessionHeader167, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "setDocumentImages")));
                                                    addHeader(omElementsessionHeader167,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.SetDocumentImagesResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.SetDocumentImagesResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"setDocumentImages"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"setDocumentImages"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"setDocumentImages"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.DocumentFault){
                          throw (com.rsys.ws.DocumentFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Closes a campaign.
                     * @see com.rsys.ws.ResponsysWSService#closeCampaign
                     * @param closeCampaign169
                    
                     * @param sessionHeader170
                    
                     * @throws com.rsys.ws.CampaignFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.CloseCampaignResponse closeCampaign(

                            com.rsys.ws.CloseCampaign closeCampaign169,com.rsys.ws.SessionHeader sessionHeader170)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.CampaignFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[32].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:closeCampaignRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    closeCampaign169,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "closeCampaign")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "closeCampaign"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader170!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader170 = toOM(sessionHeader170, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "closeCampaign")));
                                                    addHeader(omElementsessionHeader170,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.CloseCampaignResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.CloseCampaignResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"closeCampaign"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"closeCampaign"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"closeCampaign"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.CampaignFault){
                          throw (com.rsys.ws.CampaignFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Delete asset in the Content Library.
                     * @see com.rsys.ws.ResponsysWSService#deleteContentLibraryItem
                     * @param deleteContentLibraryItem172
                    
                     * @param sessionHeader173
                    
                     * @throws com.rsys.ws.DocumentFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.DeleteContentLibraryItemResponse deleteContentLibraryItem(

                            com.rsys.ws.DeleteContentLibraryItem deleteContentLibraryItem172,com.rsys.ws.SessionHeader sessionHeader173)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.DocumentFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[33].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:deleteContentLibraryItemRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteContentLibraryItem172,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "deleteContentLibraryItem")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "deleteContentLibraryItem"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader173!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader173 = toOM(sessionHeader173, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "deleteContentLibraryItem")));
                                                    addHeader(omElementsessionHeader173,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.DeleteContentLibraryItemResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.DeleteContentLibraryItemResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteContentLibraryItem"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteContentLibraryItem"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteContentLibraryItem"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.DocumentFault){
                          throw (com.rsys.ws.DocumentFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Get campaign properties.
                     * @see com.rsys.ws.ResponsysWSService#getCampaignProperties
                     * @param getCampaignProperties175
                    
                     * @param sessionHeader176
                    
                     * @throws com.rsys.ws.CampaignFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.GetCampaignPropertiesResponse getCampaignProperties(

                            com.rsys.ws.GetCampaignProperties getCampaignProperties175,com.rsys.ws.SessionHeader sessionHeader176)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.CampaignFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[34].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:getCampaignPropertiesRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCampaignProperties175,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getCampaignProperties")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getCampaignProperties"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader176!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader176 = toOM(sessionHeader176, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "getCampaignProperties")));
                                                    addHeader(omElementsessionHeader176,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.GetCampaignPropertiesResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.GetCampaignPropertiesResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getCampaignProperties"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getCampaignProperties"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getCampaignProperties"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.CampaignFault){
                          throw (com.rsys.ws.CampaignFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Auhenticate the server.
                     * @see com.rsys.ws.ResponsysWSService#authenticateServer
                     * @param authenticateServer178
                    
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.AccountFault : 
                     */

                    

                            public  com.rsys.ws.AuthenticateServerResponse authenticateServer(

                            com.rsys.ws.AuthenticateServer authenticateServer178)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.AccountFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[35].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:authenticateServerRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    authenticateServer178,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "authenticateServer")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "authenticateServer"));
                                                
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.AuthenticateServerResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.AuthenticateServerResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"authenticateServer"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"authenticateServer"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"authenticateServer"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.AccountFault){
                          throw (com.rsys.ws.AccountFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Merge data into a link table.
                     * @see com.rsys.ws.ResponsysWSService#mergeLinkRecords
                     * @param mergeLinkRecords180
                    
                     * @param sessionHeader181
                    
                     * @throws com.rsys.ws.LinkTableFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.MergeLinkRecordsResponse mergeLinkRecords(

                            com.rsys.ws.MergeLinkRecords mergeLinkRecords180,com.rsys.ws.SessionHeader sessionHeader181)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.LinkTableFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[36].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:mergeLinkRecordsRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    mergeLinkRecords180,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "mergeLinkRecords")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "mergeLinkRecords"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader181!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader181 = toOM(sessionHeader181, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "mergeLinkRecords")));
                                                    addHeader(omElementsessionHeader181,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.MergeLinkRecordsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.MergeLinkRecordsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"mergeLinkRecords"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"mergeLinkRecords"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"mergeLinkRecords"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.LinkTableFault){
                          throw (com.rsys.ws.LinkTableFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Create a campaign.
                     * @see com.rsys.ws.ResponsysWSService#createCampaign
                     * @param createCampaign183
                    
                     * @param sessionHeader184
                    
                     * @throws com.rsys.ws.CampaignFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.CreateCampaignResponse createCampaign(

                            com.rsys.ws.CreateCampaign createCampaign183,com.rsys.ws.SessionHeader sessionHeader184)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.CampaignFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[37].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:createCampaignRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createCampaign183,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "createCampaign")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "createCampaign"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader184!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader184 = toOM(sessionHeader184, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "createCampaign")));
                                                    addHeader(omElementsessionHeader184,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.CreateCampaignResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.CreateCampaignResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createCampaign"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createCampaign"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createCampaign"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.CampaignFault){
                          throw (com.rsys.ws.CampaignFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Merge data into a table.
                     * @see com.rsys.ws.ResponsysWSService#mergeTableRecords
                     * @param mergeTableRecords186
                    
                     * @param sessionHeader187
                    
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.TableFault : 
                     */

                    

                            public  com.rsys.ws.MergeTableRecordsResponse mergeTableRecords(

                            com.rsys.ws.MergeTableRecords mergeTableRecords186,com.rsys.ws.SessionHeader sessionHeader187)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.TableFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[38].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:mergeTableRecordsRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    mergeTableRecords186,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "mergeTableRecords")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "mergeTableRecords"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader187!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader187 = toOM(sessionHeader187, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "mergeTableRecords")));
                                                    addHeader(omElementsessionHeader187,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.MergeTableRecordsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.MergeTableRecordsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"mergeTableRecords"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"mergeTableRecords"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"mergeTableRecords"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.TableFault){
                          throw (com.rsys.ws.TableFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Launch a Campaign Immediately.
                     * @see com.rsys.ws.ResponsysWSService#launchCampaign
                     * @param launchCampaign189
                    
                     * @param sessionHeader190
                    
                     * @throws com.rsys.ws.CampaignFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.LaunchCampaignResponse launchCampaign(

                            com.rsys.ws.LaunchCampaign launchCampaign189,com.rsys.ws.SessionHeader sessionHeader190)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.CampaignFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[39].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:launchCampaignRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    launchCampaign189,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "launchCampaign")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "launchCampaign"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader190!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader190 = toOM(sessionHeader190, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "launchCampaign")));
                                                    addHeader(omElementsessionHeader190,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.LaunchCampaignResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.LaunchCampaignResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"launchCampaign"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"launchCampaign"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"launchCampaign"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.CampaignFault){
                          throw (com.rsys.ws.CampaignFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Retrieves records from a list extension.
                     * @see com.rsys.ws.ResponsysWSService#retrieveProfileExtensionRecords
                     * @param retrieveProfileExtensionRecords192
                    
                     * @param sessionHeader193
                    
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.ListExtensionFault : 
                     */

                    

                            public  com.rsys.ws.RetrieveProfileExtensionRecordsResponse retrieveProfileExtensionRecords(

                            com.rsys.ws.RetrieveProfileExtensionRecords retrieveProfileExtensionRecords192,com.rsys.ws.SessionHeader sessionHeader193)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.ListExtensionFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[40].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:retrieveProfileExtensionRecordsRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    retrieveProfileExtensionRecords192,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "retrieveProfileExtensionRecords")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "retrieveProfileExtensionRecords"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader193!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader193 = toOM(sessionHeader193, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "retrieveProfileExtensionRecords")));
                                                    addHeader(omElementsessionHeader193,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.RetrieveProfileExtensionRecordsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.RetrieveProfileExtensionRecordsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"retrieveProfileExtensionRecords"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"retrieveProfileExtensionRecords"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"retrieveProfileExtensionRecords"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.ListExtensionFault){
                          throw (com.rsys.ws.ListExtensionFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Deletes a document.
                     * @see com.rsys.ws.ResponsysWSService#deleteDocument
                     * @param deleteDocument195
                    
                     * @param sessionHeader196
                    
                     * @throws com.rsys.ws.DocumentFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.DeleteDocumentResponse deleteDocument(

                            com.rsys.ws.DeleteDocument deleteDocument195,com.rsys.ws.SessionHeader sessionHeader196)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.DocumentFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[41].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:deleteDocumentRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteDocument195,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "deleteDocument")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "deleteDocument"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader196!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader196 = toOM(sessionHeader196, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "deleteDocument")));
                                                    addHeader(omElementsessionHeader196,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.DeleteDocumentResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.DeleteDocumentResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteDocument"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteDocument"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteDocument"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.DocumentFault){
                          throw (com.rsys.ws.DocumentFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Schedule a Campaign Launch.
                     * @see com.rsys.ws.ResponsysWSService#scheduleCampaignLaunch
                     * @param scheduleCampaignLaunch198
                    
                     * @param sessionHeader199
                    
                     * @throws com.rsys.ws.CampaignFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.ScheduleCampaignLaunchResponse scheduleCampaignLaunch(

                            com.rsys.ws.ScheduleCampaignLaunch scheduleCampaignLaunch198,com.rsys.ws.SessionHeader sessionHeader199)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.CampaignFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[42].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:scheduleCampaignLaunchRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    scheduleCampaignLaunch198,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "scheduleCampaignLaunch")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "scheduleCampaignLaunch"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader199!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader199 = toOM(sessionHeader199, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "scheduleCampaignLaunch")));
                                                    addHeader(omElementsessionHeader199,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.ScheduleCampaignLaunchResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.ScheduleCampaignLaunchResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"scheduleCampaignLaunch"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"scheduleCampaignLaunch"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"scheduleCampaignLaunch"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.CampaignFault){
                          throw (com.rsys.ws.CampaignFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Set campaign properties.
                     * @see com.rsys.ws.ResponsysWSService#setCampaignProperties
                     * @param setCampaignProperties201
                    
                     * @param sessionHeader202
                    
                     * @throws com.rsys.ws.CampaignFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.SetCampaignPropertiesResponse setCampaignProperties(

                            com.rsys.ws.SetCampaignProperties setCampaignProperties201,com.rsys.ws.SessionHeader sessionHeader202)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.CampaignFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[43].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:setCampaignPropertiesRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    setCampaignProperties201,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "setCampaignProperties")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "setCampaignProperties"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader202!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader202 = toOM(sessionHeader202, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "setCampaignProperties")));
                                                    addHeader(omElementsessionHeader202,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.SetCampaignPropertiesResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.SetCampaignPropertiesResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"setCampaignProperties"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"setCampaignProperties"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"setCampaignProperties"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.CampaignFault){
                          throw (com.rsys.ws.CampaignFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Merge And Send Triggered Message for 1 or more
                recipients.
                     * @see com.rsys.ws.ResponsysWSService#haMergeTriggerEmail
                     * @param haMergeTriggerEmail204
                    
                     * @param sessionHeader205
                    
                     * @throws com.rsys.ws.DuplicateApiRequestFault : 
                     * @throws com.rsys.ws.UnrecoverableErrorFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.TriggeredMessageFault : 
                     */

                    

                            public  com.rsys.ws.HaMergeTriggerEmailResponse haMergeTriggerEmail(

                            com.rsys.ws.HaMergeTriggerEmail haMergeTriggerEmail204,com.rsys.ws.SessionHeader sessionHeader205)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.DuplicateApiRequestFault
                        ,com.rsys.ws.UnrecoverableErrorFault
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.TriggeredMessageFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[44].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:HaMergeTriggerEmailRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    haMergeTriggerEmail204,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "haMergeTriggerEmail")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "haMergeTriggerEmail"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader205!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader205 = toOM(sessionHeader205, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "haMergeTriggerEmail")));
                                                    addHeader(omElementsessionHeader205,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.HaMergeTriggerEmailResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.HaMergeTriggerEmailResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"HaMergeTriggerEmail"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"HaMergeTriggerEmail"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"HaMergeTriggerEmail"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.DuplicateApiRequestFault){
                          throw (com.rsys.ws.DuplicateApiRequestFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnrecoverableErrorFault){
                          throw (com.rsys.ws.UnrecoverableErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.TriggeredMessageFault){
                          throw (com.rsys.ws.TriggeredMessageFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Deletes an existing list.
                     * @see com.rsys.ws.ResponsysWSService#deleteList
                     * @param deleteList207
                    
                     * @param sessionHeader208
                    
                     * @throws com.rsys.ws.ListFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.DeleteListResponse deleteList(

                            com.rsys.ws.DeleteList deleteList207,com.rsys.ws.SessionHeader sessionHeader208)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.ListFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[45].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:deleteListRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteList207,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "deleteList")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "deleteList"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader208!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader208 = toOM(sessionHeader208, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "deleteList")));
                                                    addHeader(omElementsessionHeader208,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.DeleteListResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.DeleteListResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteList"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteList"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteList"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.ListFault){
                          throw (com.rsys.ws.ListFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.rsys.ws.ResponsysWSService#createProfileExtensionTable
                     * @param createProfileExtensionTable210
                    
                     * @param sessionHeader211
                    
                     * @throws com.rsys.ws.ListFault : 
                     */

                    

                            public  com.rsys.ws.CreateProfileExtensionTableResponse createProfileExtensionTable(

                            com.rsys.ws.CreateProfileExtensionTable createProfileExtensionTable210,com.rsys.ws.SessionHeader sessionHeader211)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.ListFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[46].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:createProfileExtensionTableRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createProfileExtensionTable210,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "createProfileExtensionTable")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "createProfileExtensionTable"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader211!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader211 = toOM(sessionHeader211, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "createProfileExtensionTable")));
                                                    addHeader(omElementsessionHeader211,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.CreateProfileExtensionTableResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.CreateProfileExtensionTableResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createProfileExtensionTable"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createProfileExtensionTable"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createProfileExtensionTable"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.ListFault){
                          throw (com.rsys.ws.ListFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Creates a view from the given SQL query.
                     * @see com.rsys.ws.ResponsysWSService#createSQLView
                     * @param createSQLView213
                    
                     * @param sessionHeader214
                    
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.TableFault : 
                     */

                    

                            public  com.rsys.ws.CreateSQLViewResponse createSQLView(

                            com.rsys.ws.CreateSQLView createSQLView213,com.rsys.ws.SessionHeader sessionHeader214)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.TableFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[47].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:createSQLViewRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createSQLView213,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "createSQLView")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "createSQLView"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader214!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader214 = toOM(sessionHeader214, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "createSQLView")));
                                                    addHeader(omElementsessionHeader214,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.CreateSQLViewResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.CreateSQLViewResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createSQLView"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createSQLView"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createSQLView"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.TableFault){
                          throw (com.rsys.ws.TableFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Get content of a document.
                     * @see com.rsys.ws.ResponsysWSService#getDocumentContent
                     * @param getDocumentContent216
                    
                     * @param sessionHeader217
                    
                     * @throws com.rsys.ws.DocumentFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.GetDocumentContentResponse getDocumentContent(

                            com.rsys.ws.GetDocumentContent getDocumentContent216,com.rsys.ws.SessionHeader sessionHeader217)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.DocumentFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[48].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:getDocumentContentRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getDocumentContent216,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getDocumentContent")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getDocumentContent"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader217!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader217 = toOM(sessionHeader217, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "getDocumentContent")));
                                                    addHeader(omElementsessionHeader217,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.GetDocumentContentResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.GetDocumentContentResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getDocumentContent"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getDocumentContent"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getDocumentContent"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.DocumentFault){
                          throw (com.rsys.ws.DocumentFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Gets the Job Runs for a Job.
                     * @see com.rsys.ws.ResponsysWSService#getJobRuns
                     * @param getJobRuns219
                    
                     * @param sessionHeader220
                    
                     * @throws com.rsys.ws.ConnectFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.GetJobRunsResponse getJobRuns(

                            com.rsys.ws.GetJobRuns getJobRuns219,com.rsys.ws.SessionHeader sessionHeader220)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.ConnectFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[49].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:getJobRunsRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getJobRuns219,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getJobRuns")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getJobRuns"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader220!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader220 = toOM(sessionHeader220, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "getJobRuns")));
                                                    addHeader(omElementsessionHeader220,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.GetJobRunsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.GetJobRunsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getJobRuns"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getJobRuns"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getJobRuns"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.ConnectFault){
                          throw (com.rsys.ws.ConnectFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Truncate data in existing table.
                     * @see com.rsys.ws.ResponsysWSService#truncateTable
                     * @param truncateTable222
                    
                     * @param sessionHeader223
                    
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.TableFault : 
                     */

                    

                            public  com.rsys.ws.TruncateTableResponse truncateTable(

                            com.rsys.ws.TruncateTable truncateTable222,com.rsys.ws.SessionHeader sessionHeader223)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.TableFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[50].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:truncateTableRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    truncateTable222,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "truncateTable")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "truncateTable"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader223!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader223 = toOM(sessionHeader223, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "truncateTable")));
                                                    addHeader(omElementsessionHeader223,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.TruncateTableResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.TruncateTableResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"truncateTable"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"truncateTable"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"truncateTable"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.TableFault){
                          throw (com.rsys.ws.TableFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Unschedules a campaign.
                     * @see com.rsys.ws.ResponsysWSService#unscheduleCampaignLaunch
                     * @param unscheduleCampaignLaunch225
                    
                     * @param sessionHeader226
                    
                     * @throws com.rsys.ws.CampaignFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.UnscheduleCampaignLaunchResponse unscheduleCampaignLaunch(

                            com.rsys.ws.UnscheduleCampaignLaunch unscheduleCampaignLaunch225,com.rsys.ws.SessionHeader sessionHeader226)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.CampaignFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[51].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:unscheduleCampaignLaunchRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    unscheduleCampaignLaunch225,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "unscheduleCampaignLaunch")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "unscheduleCampaignLaunch"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader226!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader226 = toOM(sessionHeader226, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "unscheduleCampaignLaunch")));
                                                    addHeader(omElementsessionHeader226,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.UnscheduleCampaignLaunchResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.UnscheduleCampaignLaunchResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"unscheduleCampaignLaunch"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"unscheduleCampaignLaunch"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"unscheduleCampaignLaunch"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.CampaignFault){
                          throw (com.rsys.ws.CampaignFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Describe Objects.
                     * @see com.rsys.ws.ResponsysWSService#describeObjects
                     * @param describeObjects228
                    
                     * @param sessionHeader229
                    
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.ObjectFault : 
                     */

                    

                            public  com.rsys.ws.DescribeObjectsResponse describeObjects(

                            com.rsys.ws.DescribeObjects describeObjects228,com.rsys.ws.SessionHeader sessionHeader229)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.ObjectFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[52].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:describeObjectsRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    describeObjects228,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "describeObjects")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "describeObjects"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader229!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader229 = toOM(sessionHeader229, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "describeObjects")));
                                                    addHeader(omElementsessionHeader229,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.DescribeObjectsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.DescribeObjectsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"describeObjects"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"describeObjects"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"describeObjects"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.ObjectFault){
                          throw (com.rsys.ws.ObjectFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Changes the table schema.
                     * @see com.rsys.ws.ResponsysWSService#changeTableSchema
                     * @param changeTableSchema231
                    
                     * @param sessionHeader232
                    
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.TableFault : 
                     */

                    

                            public  com.rsys.ws.ChangeTableSchemaResponse changeTableSchema(

                            com.rsys.ws.ChangeTableSchema changeTableSchema231,com.rsys.ws.SessionHeader sessionHeader232)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.TableFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[53].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:changeTableSchemaRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    changeTableSchema231,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "changeTableSchema")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "changeTableSchema"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader232!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader232 = toOM(sessionHeader232, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "changeTableSchema")));
                                                    addHeader(omElementsessionHeader232,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.ChangeTableSchemaResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.ChangeTableSchemaResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"changeTableSchema"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"changeTableSchema"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"changeTableSchema"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.TableFault){
                          throw (com.rsys.ws.TableFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Merge And Send Triggered Message for 1 recipient.
                     * @see com.rsys.ws.ResponsysWSService#haMergeTriggerSms
                     * @param haMergeTriggerSms234
                    
                     * @param sessionHeader235
                    
                     * @throws com.rsys.ws.DuplicateApiRequestFault : 
                     * @throws com.rsys.ws.UnrecoverableErrorFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.TriggeredMessageFault : 
                     */

                    

                            public  com.rsys.ws.HaMergeTriggerSmsResponse haMergeTriggerSms(

                            com.rsys.ws.HaMergeTriggerSms haMergeTriggerSms234,com.rsys.ws.SessionHeader sessionHeader235)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.DuplicateApiRequestFault
                        ,com.rsys.ws.UnrecoverableErrorFault
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.TriggeredMessageFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[54].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:HaMergeTriggerSmsRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    haMergeTriggerSms234,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "haMergeTriggerSms")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "haMergeTriggerSms"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader235!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader235 = toOM(sessionHeader235, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "haMergeTriggerSms")));
                                                    addHeader(omElementsessionHeader235,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.HaMergeTriggerSmsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.HaMergeTriggerSmsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"HaMergeTriggerSms"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"HaMergeTriggerSms"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"HaMergeTriggerSms"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.DuplicateApiRequestFault){
                          throw (com.rsys.ws.DuplicateApiRequestFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnrecoverableErrorFault){
                          throw (com.rsys.ws.UnrecoverableErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.TriggeredMessageFault){
                          throw (com.rsys.ws.TriggeredMessageFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Trigger Custom Event to 1 or more recipients.
                     * @see com.rsys.ws.ResponsysWSService#triggerCustomEvent
                     * @param triggerCustomEvent237
                    
                     * @param sessionHeader238
                    
                     * @throws com.rsys.ws.CustomEventFault : 
                     * @throws com.rsys.ws.DuplicateApiRequestFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.TriggerCustomEventResponse triggerCustomEvent(

                            com.rsys.ws.TriggerCustomEvent triggerCustomEvent237,com.rsys.ws.SessionHeader sessionHeader238)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.CustomEventFault
                        ,com.rsys.ws.DuplicateApiRequestFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[55].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:triggerCustomEventRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    triggerCustomEvent237,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "triggerCustomEvent")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "triggerCustomEvent"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader238!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader238 = toOM(sessionHeader238, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "triggerCustomEvent")));
                                                    addHeader(omElementsessionHeader238,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.TriggerCustomEventResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.TriggerCustomEventResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"triggerCustomEvent"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"triggerCustomEvent"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"triggerCustomEvent"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.CustomEventFault){
                          throw (com.rsys.ws.CustomEventFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.DuplicateApiRequestFault){
                          throw (com.rsys.ws.DuplicateApiRequestFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Run a Connect Job.
                     * @see com.rsys.ws.ResponsysWSService#runJob
                     * @param runJob240
                    
                     * @param sessionHeader241
                    
                     * @throws com.rsys.ws.ConnectFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.RunJobResponse runJob(

                            com.rsys.ws.RunJob runJob240,com.rsys.ws.SessionHeader sessionHeader241)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.ConnectFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[56].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:runJobRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    runJob240,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "runJob")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "runJob"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader241!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader241 = toOM(sessionHeader241, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "runJob")));
                                                    addHeader(omElementsessionHeader241,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.RunJobResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.RunJobResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"runJob"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"runJob"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"runJob"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.ConnectFault){
                          throw (com.rsys.ws.ConnectFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Deletes records from a table.
                     * @see com.rsys.ws.ResponsysWSService#deleteTableRecords
                     * @param deleteTableRecords243
                    
                     * @param sessionHeader244
                    
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.TableFault : 
                     */

                    

                            public  com.rsys.ws.DeleteTableRecordsResponse deleteTableRecords(

                            com.rsys.ws.DeleteTableRecords deleteTableRecords243,com.rsys.ws.SessionHeader sessionHeader244)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.TableFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[57].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:deleteTableRecordsRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteTableRecords243,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "deleteTableRecords")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "deleteTableRecords"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader244!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader244 = toOM(sessionHeader244, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "deleteTableRecords")));
                                                    addHeader(omElementsessionHeader244,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.DeleteTableRecordsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.DeleteTableRecordsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteTableRecords"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteTableRecords"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteTableRecords"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.TableFault){
                          throw (com.rsys.ws.TableFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * List folders in the Responsys account.
                     * @see com.rsys.ws.ResponsysWSService#listFolders
                     * @param listFolders246
                    
                     * @param sessionHeader247
                    
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.ListFoldersResponse listFolders(

                            com.rsys.ws.ListFolders listFolders246,com.rsys.ws.SessionHeader sessionHeader247)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[58].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:listFoldersRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    listFolders246,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "listFolders")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "listFolders"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader247!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader247 = toOM(sessionHeader247, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "listFolders")));
                                                    addHeader(omElementsessionHeader247,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.ListFoldersResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.ListFoldersResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"listFolders"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"listFolders"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"listFolders"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Check if folder exists in the Content Library.
                     * @see com.rsys.ws.ResponsysWSService#doesContentLibraryFolderExist
                     * @param doesContentLibraryFolderExist249
                    
                     * @param sessionHeader250
                    
                     * @throws com.rsys.ws.FolderFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.DoesContentLibraryFolderExistResponse doesContentLibraryFolderExist(

                            com.rsys.ws.DoesContentLibraryFolderExist doesContentLibraryFolderExist249,com.rsys.ws.SessionHeader sessionHeader250)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.FolderFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[59].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:doesContentLibraryFolderExistRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    doesContentLibraryFolderExist249,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "doesContentLibraryFolderExist")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "doesContentLibraryFolderExist"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader250!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader250 = toOM(sessionHeader250, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "doesContentLibraryFolderExist")));
                                                    addHeader(omElementsessionHeader250,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.DoesContentLibraryFolderExistResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.DoesContentLibraryFolderExistResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"doesContentLibraryFolderExist"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"doesContentLibraryFolderExist"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"doesContentLibraryFolderExist"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.FolderFault){
                          throw (com.rsys.ws.FolderFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Get open launches for an account.
                     * @see com.rsys.ws.ResponsysWSService#getOpenLaunches
                     * @param getOpenLaunches252
                    
                     * @param sessionHeader253
                    
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.AccountFault : 
                     */

                    

                            public  com.rsys.ws.GetOpenLaunchesResponse getOpenLaunches(

                            com.rsys.ws.GetOpenLaunches getOpenLaunches252,com.rsys.ws.SessionHeader sessionHeader253)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.AccountFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[60].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:getOpenLaunchesRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getOpenLaunches252,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getOpenLaunches")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getOpenLaunches"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader253!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader253 = toOM(sessionHeader253, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "getOpenLaunches")));
                                                    addHeader(omElementsessionHeader253,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.GetOpenLaunchesResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.GetOpenLaunchesResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getOpenLaunches"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getOpenLaunches"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getOpenLaunches"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.AccountFault){
                          throw (com.rsys.ws.AccountFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Merge data into a list extension returning the recipient
                ids.
                     * @see com.rsys.ws.ResponsysWSService#mergeIntoProfileExtension
                     * @param mergeIntoProfileExtension255
                    
                     * @param sessionHeader256
                    
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.ListExtensionFault : 
                     */

                    

                            public  com.rsys.ws.MergeIntoProfileExtensionResponse mergeIntoProfileExtension(

                            com.rsys.ws.MergeIntoProfileExtension mergeIntoProfileExtension255,com.rsys.ws.SessionHeader sessionHeader256)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.ListExtensionFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[61].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:mergeIntoProfileExtensionRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    mergeIntoProfileExtension255,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "mergeIntoProfileExtension")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "mergeIntoProfileExtension"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader256!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader256 = toOM(sessionHeader256, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "mergeIntoProfileExtension")));
                                                    addHeader(omElementsessionHeader256,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.MergeIntoProfileExtensionResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.MergeIntoProfileExtensionResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"mergeIntoProfileExtension"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"mergeIntoProfileExtension"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"mergeIntoProfileExtension"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.ListExtensionFault){
                          throw (com.rsys.ws.ListExtensionFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Creates an empty link table.
                     * @see com.rsys.ws.ResponsysWSService#createLinkTable
                     * @param createLinkTable258
                    
                     * @param sessionHeader259
                    
                     * @throws com.rsys.ws.LinkTableFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.CreateLinkTableResponse createLinkTable(

                            com.rsys.ws.CreateLinkTable createLinkTable258,com.rsys.ws.SessionHeader sessionHeader259)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.LinkTableFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[62].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:createLinkTableRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createLinkTable258,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "createLinkTable")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "createLinkTable"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader259!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader259 = toOM(sessionHeader259, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "createLinkTable")));
                                                    addHeader(omElementsessionHeader259,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.CreateLinkTableResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.CreateLinkTableResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createLinkTable"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createLinkTable"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createLinkTable"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.LinkTableFault){
                          throw (com.rsys.ws.LinkTableFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Gets the Log for a Job Run.
                     * @see com.rsys.ws.ResponsysWSService#getJobRunLog
                     * @param getJobRunLog261
                    
                     * @param sessionHeader262
                    
                     * @throws com.rsys.ws.ConnectFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.GetJobRunLogResponse getJobRunLog(

                            com.rsys.ws.GetJobRunLog getJobRunLog261,com.rsys.ws.SessionHeader sessionHeader262)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.ConnectFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[63].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:getJobRunLogRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getJobRunLog261,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getJobRunLog")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getJobRunLog"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader262!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader262 = toOM(sessionHeader262, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "getJobRunLog")));
                                                    addHeader(omElementsessionHeader262,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.GetJobRunLogResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.GetJobRunLogResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getJobRunLog"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getJobRunLog"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getJobRunLog"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.ConnectFault){
                          throw (com.rsys.ws.ConnectFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Deletes a campaign.
                     * @see com.rsys.ws.ResponsysWSService#deleteCampaign
                     * @param deleteCampaign264
                    
                     * @param sessionHeader265
                    
                     * @throws com.rsys.ws.CampaignFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.DeleteCampaignResponse deleteCampaign(

                            com.rsys.ws.DeleteCampaign deleteCampaign264,com.rsys.ws.SessionHeader sessionHeader265)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.CampaignFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[64].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:deleteCampaignRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteCampaign264,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "deleteCampaign")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "deleteCampaign"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader265!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader265 = toOM(sessionHeader265, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "deleteCampaign")));
                                                    addHeader(omElementsessionHeader265,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.DeleteCampaignResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.DeleteCampaignResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteCampaign"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteCampaign"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteCampaign"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.CampaignFault){
                          throw (com.rsys.ws.CampaignFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Gets the campaign Id given a campaign name.
                     * @see com.rsys.ws.ResponsysWSService#getCampaignId
                     * @param getCampaignId267
                    
                     * @param sessionHeader268
                    
                     * @throws com.rsys.ws.CampaignFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.GetCampaignIdResponse getCampaignId(

                            com.rsys.ws.GetCampaignId getCampaignId267,com.rsys.ws.SessionHeader sessionHeader268)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.CampaignFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[65].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:getCampaignIdRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCampaignId267,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getCampaignId")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getCampaignId"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader268!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader268 = toOM(sessionHeader268, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "getCampaignId")));
                                                    addHeader(omElementsessionHeader268,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.GetCampaignIdResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.GetCampaignIdResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getCampaignId"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getCampaignId"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getCampaignId"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.CampaignFault){
                          throw (com.rsys.ws.CampaignFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Merge data into a list.
                     * @see com.rsys.ws.ResponsysWSService#mergeListMembers
                     * @param mergeListMembers270
                    
                     * @param sessionHeader271
                    
                     * @throws com.rsys.ws.ListFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.MergeListMembersResponse mergeListMembers(

                            com.rsys.ws.MergeListMembers mergeListMembers270,com.rsys.ws.SessionHeader sessionHeader271)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.ListFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[66].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:mergeListMembersRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    mergeListMembers270,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "mergeListMembers")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "mergeListMembers"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader271!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader271 = toOM(sessionHeader271, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "mergeListMembers")));
                                                    addHeader(omElementsessionHeader271,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.MergeListMembersResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.MergeListMembersResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"mergeListMembers"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"mergeListMembers"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"mergeListMembers"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.ListFault){
                          throw (com.rsys.ws.ListFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Creates an empty list.
                     * @see com.rsys.ws.ResponsysWSService#createList
                     * @param createList273
                    
                     * @param sessionHeader274
                    
                     * @throws com.rsys.ws.ListFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.CreateListResponse createList(

                            com.rsys.ws.CreateList createList273,com.rsys.ws.SessionHeader sessionHeader274)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.ListFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[67].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:createListRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    createList273,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "createList")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "createList"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader274!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader274 = toOM(sessionHeader274, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "createList")));
                                                    addHeader(omElementsessionHeader274,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.CreateListResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.CreateListResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createList"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createList"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"createList"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.ListFault){
                          throw (com.rsys.ws.ListFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Login to the Responsys Web Services API using
                Certificate.
                     * @see com.rsys.ws.ResponsysWSService#loginWithCertificate
                     * @param loginWithCertificate276
                    
                     * @param authSessionHeader277
                    
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.AccountFault : 
                     */

                    

                            public  com.rsys.ws.LoginWithCertificateResponse loginWithCertificate(

                            com.rsys.ws.LoginWithCertificate loginWithCertificate276,com.rsys.ws.AuthSessionHeader authSessionHeader277)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.AccountFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[68].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:loginWithCertificateRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    loginWithCertificate276,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "loginWithCertificate")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "loginWithCertificate"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (authSessionHeader277!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementauthSessionHeader277 = toOM(authSessionHeader277, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "loginWithCertificate")));
                                                    addHeader(omElementauthSessionHeader277,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.LoginWithCertificateResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.LoginWithCertificateResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"loginWithCertificate"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"loginWithCertificate"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"loginWithCertificate"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.AccountFault){
                          throw (com.rsys.ws.AccountFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Deletes recipients from a list extension.
                     * @see com.rsys.ws.ResponsysWSService#deleteProfileExtensionMembers
                     * @param deleteProfileExtensionMembers279
                    
                     * @param sessionHeader280
                    
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.ListExtensionFault : 
                     */

                    

                            public  com.rsys.ws.DeleteProfileExtensionMembersResponse deleteProfileExtensionMembers(

                            com.rsys.ws.DeleteProfileExtensionMembers deleteProfileExtensionMembers279,com.rsys.ws.SessionHeader sessionHeader280)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.ListExtensionFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[69].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:deleteProfileExtensionMembersRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteProfileExtensionMembers279,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "deleteProfileExtensionMembers")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "deleteProfileExtensionMembers"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader280!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader280 = toOM(sessionHeader280, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "deleteProfileExtensionMembers")));
                                                    addHeader(omElementsessionHeader280,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.DeleteProfileExtensionMembersResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.DeleteProfileExtensionMembersResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteProfileExtensionMembers"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteProfileExtensionMembers"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteProfileExtensionMembers"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.ListExtensionFault){
                          throw (com.rsys.ws.ListExtensionFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Retrieves records from table.
                     * @see com.rsys.ws.ResponsysWSService#retrieveTableRecords
                     * @param retrieveTableRecords282
                    
                     * @param sessionHeader283
                    
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.TableFault : 
                     */

                    

                            public  com.rsys.ws.RetrieveTableRecordsResponse retrieveTableRecords(

                            com.rsys.ws.RetrieveTableRecords retrieveTableRecords282,com.rsys.ws.SessionHeader sessionHeader283)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.TableFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[70].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:retrieveTableRecordsRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    retrieveTableRecords282,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "retrieveTableRecords")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "retrieveTableRecords"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader283!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader283 = toOM(sessionHeader283, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "retrieveTableRecords")));
                                                    addHeader(omElementsessionHeader283,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.RetrieveTableRecordsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.RetrieveTableRecordsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"retrieveTableRecords"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"retrieveTableRecords"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"retrieveTableRecords"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.TableFault){
                          throw (com.rsys.ws.TableFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Changes the list schema.
                     * @see com.rsys.ws.ResponsysWSService#changeListSchema
                     * @param changeListSchema285
                    
                     * @param sessionHeader286
                    
                     * @throws com.rsys.ws.ListFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.ChangeListSchemaResponse changeListSchema(

                            com.rsys.ws.ChangeListSchema changeListSchema285,com.rsys.ws.SessionHeader sessionHeader286)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.ListFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[71].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:changeListSchemaRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    changeListSchema285,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "changeListSchema")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "changeListSchema"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader286!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader286 = toOM(sessionHeader286, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "changeListSchema")));
                                                    addHeader(omElementsessionHeader286,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.ChangeListSchemaResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.ChangeListSchemaResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"changeListSchema"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"changeListSchema"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"changeListSchema"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.ListFault){
                          throw (com.rsys.ws.ListFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Get images from a document.
                     * @see com.rsys.ws.ResponsysWSService#getDocumentImages
                     * @param getDocumentImages288
                    
                     * @param sessionHeader289
                    
                     * @throws com.rsys.ws.DocumentFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.GetDocumentImagesResponse getDocumentImages(

                            com.rsys.ws.GetDocumentImages getDocumentImages288,com.rsys.ws.SessionHeader sessionHeader289)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.DocumentFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[72].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:getDocumentImagesRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getDocumentImages288,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getDocumentImages")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getDocumentImages"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader289!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader289 = toOM(sessionHeader289, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "getDocumentImages")));
                                                    addHeader(omElementsessionHeader289,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.GetDocumentImagesResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.GetDocumentImagesResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getDocumentImages"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getDocumentImages"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getDocumentImages"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.DocumentFault){
                          throw (com.rsys.ws.DocumentFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Gets the Jobs for the account.
                     * @see com.rsys.ws.ResponsysWSService#getJobs
                     * @param getJobs291
                    
                     * @param sessionHeader292
                    
                     * @throws com.rsys.ws.ConnectFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.GetJobsResponse getJobs(

                            com.rsys.ws.GetJobs getJobs291,com.rsys.ws.SessionHeader sessionHeader292)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.ConnectFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[73].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:getJobsRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getJobs291,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getJobs")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getJobs"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader292!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader292 = toOM(sessionHeader292, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "getJobs")));
                                                    addHeader(omElementsessionHeader292,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.GetJobsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.GetJobsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getJobs"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getJobs"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getJobs"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.ConnectFault){
                          throw (com.rsys.ws.ConnectFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Merge data into a list returning the recipient ids.
                     * @see com.rsys.ws.ResponsysWSService#mergeListMembersRIID
                     * @param mergeListMembersRIID294
                    
                     * @param sessionHeader295
                    
                     * @throws com.rsys.ws.ListFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.MergeListMembersRIIDResponse mergeListMembersRIID(

                            com.rsys.ws.MergeListMembersRIID mergeListMembersRIID294,com.rsys.ws.SessionHeader sessionHeader295)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.ListFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[74].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:mergeListMembersRIIDRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    mergeListMembersRIID294,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "mergeListMembersRIID")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "mergeListMembersRIID"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader295!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader295 = toOM(sessionHeader295, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "mergeListMembersRIID")));
                                                    addHeader(omElementsessionHeader295,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.MergeListMembersRIIDResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.MergeListMembersRIIDResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"mergeListMembersRIID"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"mergeListMembersRIID"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"mergeListMembersRIID"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.ListFault){
                          throw (com.rsys.ws.ListFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Gets the updated ids between two dates.
                     * @see com.rsys.ws.ResponsysWSService#getUpdated
                     * @param getUpdated297
                    
                     * @param sessionHeader298
                    
                     * @throws com.rsys.ws.ListFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.GetUpdatedResponse getUpdated(

                            com.rsys.ws.GetUpdated getUpdated297,com.rsys.ws.SessionHeader sessionHeader298)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.ListFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[75].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:getUpdatedRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getUpdated297,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getUpdated")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "getUpdated"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader298!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader298 = toOM(sessionHeader298, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "getUpdated")));
                                                    addHeader(omElementsessionHeader298,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.GetUpdatedResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.GetUpdatedResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getUpdated"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getUpdated"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"getUpdated"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.ListFault){
                          throw (com.rsys.ws.ListFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Merge And Send Triggered Message for 1 or more
                recipients.
                     * @see com.rsys.ws.ResponsysWSService#mergeTriggerSMS
                     * @param mergeTriggerSMS300
                    
                     * @param sessionHeader301
                    
                     * @throws com.rsys.ws.DuplicateApiRequestFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     * @throws com.rsys.ws.TriggeredMessageFault : 
                     */

                    

                            public  com.rsys.ws.MergeTriggerSMSResponse mergeTriggerSMS(

                            com.rsys.ws.MergeTriggerSMS mergeTriggerSMS300,com.rsys.ws.SessionHeader sessionHeader301)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.DuplicateApiRequestFault
                        ,com.rsys.ws.UnexpectedErrorFault
                        ,com.rsys.ws.TriggeredMessageFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[76].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:mergeTriggerSMSRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    mergeTriggerSMS300,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "mergeTriggerSMS")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "mergeTriggerSMS"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader301!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader301 = toOM(sessionHeader301, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "mergeTriggerSMS")));
                                                    addHeader(omElementsessionHeader301,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.MergeTriggerSMSResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.MergeTriggerSMSResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"mergeTriggerSMS"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"mergeTriggerSMS"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"mergeTriggerSMS"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.DuplicateApiRequestFault){
                          throw (com.rsys.ws.DuplicateApiRequestFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.TriggeredMessageFault){
                          throw (com.rsys.ws.TriggeredMessageFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                    /**
                     * Auto generated method signature
                     * Deletes an existing folder.
                     * @see com.rsys.ws.ResponsysWSService#deleteFolder
                     * @param deleteFolder303
                    
                     * @param sessionHeader304
                    
                     * @throws com.rsys.ws.FolderFault : 
                     * @throws com.rsys.ws.UnexpectedErrorFault : 
                     */

                    

                            public  com.rsys.ws.DeleteFolderResponse deleteFolder(

                            com.rsys.ws.DeleteFolder deleteFolder303,com.rsys.ws.SessionHeader sessionHeader304)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.rsys.ws.FolderFault
                        ,com.rsys.ws.UnexpectedErrorFault{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[77].getName());
              _operationClient.getOptions().setAction("urn:ws.rsys.com:ResponsysWS:deleteFolderRequest");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteFolder303,
                                                    optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "deleteFolder")), new javax.xml.namespace.QName("urn:ws.rsys.com",
                                                    "deleteFolder"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (sessionHeader304!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementsessionHeader304 = toOM(sessionHeader304, optimizeContent(new javax.xml.namespace.QName("urn:ws.rsys.com", "deleteFolder")));
                                                    addHeader(omElementsessionHeader304,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.rsys.ws.DeleteFolderResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.rsys.ws.DeleteFolderResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteFolder"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteFolder"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"deleteFolder"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.rsys.ws.FolderFault){
                          throw (com.rsys.ws.FolderFault)ex;
                        }
                        
                        if (ex instanceof com.rsys.ws.UnexpectedErrorFault){
                          throw (com.rsys.ws.UnexpectedErrorFault)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            


       /**
        *  A utility method that copies the namepaces from the SOAPEnvelope
        */
       private java.util.Map getEnvelopeNamespaces(org.apache.axiom.soap.SOAPEnvelope env){
        java.util.Map returnMap = new java.util.HashMap();
        java.util.Iterator namespaceIterator = env.getAllDeclaredNamespaces();
        while (namespaceIterator.hasNext()) {
            org.apache.axiom.om.OMNamespace ns = (org.apache.axiom.om.OMNamespace) namespaceIterator.next();
            returnMap.put(ns.getPrefix(),ns.getNamespaceURI());
        }
       return returnMap;
    }

    
    
    private javax.xml.namespace.QName[] opNameArray = null;
    private boolean optimizeContent(javax.xml.namespace.QName opName) {
        

        if (opNameArray == null) {
            return false;
        }
        for (int i = 0; i < opNameArray.length; i++) {
            if (opName.equals(opNameArray[i])) {
                return true;   
            }
        }
        return false;
    }
     //https://ws5.responsys.net/webservices/services/ResponsysWSService
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetServerTimestamp param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetServerTimestamp.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetServerTimestampResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetServerTimestampResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.fault.UnexpectedErrorFault param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.fault.UnexpectedErrorFault.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.SessionHeader param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.SessionHeader.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetJobRunStatus param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetJobRunStatus.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetJobRunStatusResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetJobRunStatusResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.fault.ConnectFault param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.fault.ConnectFault.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.ListFolderObjects param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.ListFolderObjects.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.ListFolderObjectsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.ListFolderObjectsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.fault.FolderFault param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.fault.FolderFault.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetLaunchStatus param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetLaunchStatus.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetLaunchStatusResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetLaunchStatusResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.fault.CampaignFault param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.fault.CampaignFault.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.SetDocumentContent param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.SetDocumentContent.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.SetDocumentContentResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.SetDocumentContentResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.fault.DocumentFault param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.fault.DocumentFault.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.RetrieveLinkRecords param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.RetrieveLinkRecords.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.RetrieveLinkRecordsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.RetrieveLinkRecordsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.fault.LinkTableFault param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.fault.LinkTableFault.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.Login param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.Login.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.LoginResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.LoginResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.fault.AccountFault param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.fault.AccountFault.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DeleteLinkRecords param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DeleteLinkRecords.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DeleteLinkRecordsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DeleteLinkRecordsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.MoveContentLibraryItem param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.MoveContentLibraryItem.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.MoveContentLibraryItemResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.MoveContentLibraryItemResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DeleteContentLibraryFolder param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DeleteContentLibraryFolder.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DeleteContentLibraryFolderResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DeleteContentLibraryFolderResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.SetContentLibraryItem param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.SetContentLibraryItem.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.SetContentLibraryItemResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.SetContentLibraryItemResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DeleteLinkTable param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DeleteLinkTable.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DeleteLinkTableResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DeleteLinkTableResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.ListContentLibraryFolders param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.ListContentLibraryFolders.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.ListContentLibraryFoldersResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.ListContentLibraryFoldersResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CopyContentLibraryItem param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CopyContentLibraryItem.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CopyContentLibraryItemResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CopyContentLibraryItemResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DeleteListMembers param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DeleteListMembers.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DeleteListMembersResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DeleteListMembersResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.fault.ListFault param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.fault.ListFault.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetLaunchesForCampaign param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetLaunchesForCampaign.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetLaunchesForCampaignResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetLaunchesForCampaignResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.TriggerCampaignMessage param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.TriggerCampaignMessage.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.TriggerCampaignMessageResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.TriggerCampaignMessageResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.fault.DuplicateApiRequestFault param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.fault.DuplicateApiRequestFault.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.fault.TriggeredMessageFault param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.fault.TriggeredMessageFault.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CreateTable param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CreateTable.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CreateTableResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CreateTableResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.fault.TableFault param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.fault.TableFault.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.RetrieveListMembers param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.RetrieveListMembers.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.RetrieveListMembersResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.RetrieveListMembersResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.Logout param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.Logout.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.LogoutResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.LogoutResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CreateFolder param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CreateFolder.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CreateFolderResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CreateFolderResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.MergeTableRecordsWithPK param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.MergeTableRecordsWithPK.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.MergeTableRecordsWithPKResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.MergeTableRecordsWithPKResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CreateContentLibraryFolder param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CreateContentLibraryFolder.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CreateContentLibraryFolderResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CreateContentLibraryFolderResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CreateTableWithPK param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CreateTableWithPK.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CreateTableWithPKResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CreateTableWithPKResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetContentLibraryItem param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetContentLibraryItem.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetContentLibraryItemResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetContentLibraryItemResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DeleteTable param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DeleteTable.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DeleteTableResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DeleteTableResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.MergeTriggerEmail param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.MergeTriggerEmail.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.MergeTriggerEmailResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.MergeTriggerEmailResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CreateContentLibraryItem param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CreateContentLibraryItem.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CreateContentLibraryItemResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CreateContentLibraryItemResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.Copy param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.Copy.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CopyResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CopyResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.fault.ObjectFault param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.fault.ObjectFault.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CreateDocument param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CreateDocument.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CreateDocumentResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CreateDocumentResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.Move param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.Move.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.MoveResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.MoveResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.SetDocumentImages param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.SetDocumentImages.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.SetDocumentImagesResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.SetDocumentImagesResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CloseCampaign param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CloseCampaign.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CloseCampaignResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CloseCampaignResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DeleteContentLibraryItem param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DeleteContentLibraryItem.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DeleteContentLibraryItemResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DeleteContentLibraryItemResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetCampaignProperties param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetCampaignProperties.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetCampaignPropertiesResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetCampaignPropertiesResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.AuthenticateServer param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.AuthenticateServer.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.AuthenticateServerResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.AuthenticateServerResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.MergeLinkRecords param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.MergeLinkRecords.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.MergeLinkRecordsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.MergeLinkRecordsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CreateCampaign param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CreateCampaign.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CreateCampaignResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CreateCampaignResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.MergeTableRecords param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.MergeTableRecords.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.MergeTableRecordsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.MergeTableRecordsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.LaunchCampaign param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.LaunchCampaign.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.LaunchCampaignResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.LaunchCampaignResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.RetrieveProfileExtensionRecords param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.RetrieveProfileExtensionRecords.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.RetrieveProfileExtensionRecordsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.RetrieveProfileExtensionRecordsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.fault.ListExtensionFault param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.fault.ListExtensionFault.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DeleteDocument param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DeleteDocument.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DeleteDocumentResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DeleteDocumentResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.ScheduleCampaignLaunch param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.ScheduleCampaignLaunch.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.ScheduleCampaignLaunchResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.ScheduleCampaignLaunchResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.SetCampaignProperties param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.SetCampaignProperties.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.SetCampaignPropertiesResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.SetCampaignPropertiesResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.HaMergeTriggerEmail param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.HaMergeTriggerEmail.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.HaMergeTriggerEmailResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.HaMergeTriggerEmailResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.fault.UnrecoverableErrorFault param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.fault.UnrecoverableErrorFault.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DeleteList param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DeleteList.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DeleteListResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DeleteListResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CreateProfileExtensionTable param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CreateProfileExtensionTable.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CreateProfileExtensionTableResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CreateProfileExtensionTableResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CreateSQLView param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CreateSQLView.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CreateSQLViewResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CreateSQLViewResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetDocumentContent param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetDocumentContent.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetDocumentContentResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetDocumentContentResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetJobRuns param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetJobRuns.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetJobRunsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetJobRunsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.TruncateTable param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.TruncateTable.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.TruncateTableResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.TruncateTableResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.UnscheduleCampaignLaunch param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.UnscheduleCampaignLaunch.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.UnscheduleCampaignLaunchResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.UnscheduleCampaignLaunchResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DescribeObjects param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DescribeObjects.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DescribeObjectsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DescribeObjectsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.ChangeTableSchema param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.ChangeTableSchema.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.ChangeTableSchemaResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.ChangeTableSchemaResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.HaMergeTriggerSms param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.HaMergeTriggerSms.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.HaMergeTriggerSmsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.HaMergeTriggerSmsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.TriggerCustomEvent param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.TriggerCustomEvent.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.TriggerCustomEventResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.TriggerCustomEventResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.fault.CustomEventFault param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.fault.CustomEventFault.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.RunJob param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.RunJob.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.RunJobResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.RunJobResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DeleteTableRecords param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DeleteTableRecords.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DeleteTableRecordsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DeleteTableRecordsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.ListFolders param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.ListFolders.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.ListFoldersResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.ListFoldersResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DoesContentLibraryFolderExist param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DoesContentLibraryFolderExist.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DoesContentLibraryFolderExistResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DoesContentLibraryFolderExistResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetOpenLaunches param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetOpenLaunches.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetOpenLaunchesResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetOpenLaunchesResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.MergeIntoProfileExtension param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.MergeIntoProfileExtension.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.MergeIntoProfileExtensionResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.MergeIntoProfileExtensionResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CreateLinkTable param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CreateLinkTable.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CreateLinkTableResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CreateLinkTableResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetJobRunLog param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetJobRunLog.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetJobRunLogResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetJobRunLogResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DeleteCampaign param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DeleteCampaign.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DeleteCampaignResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DeleteCampaignResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetCampaignId param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetCampaignId.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetCampaignIdResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetCampaignIdResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.MergeListMembers param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.MergeListMembers.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.MergeListMembersResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.MergeListMembersResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CreateList param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CreateList.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.CreateListResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.CreateListResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.LoginWithCertificate param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.LoginWithCertificate.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.LoginWithCertificateResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.LoginWithCertificateResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.AuthSessionHeader param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.AuthSessionHeader.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DeleteProfileExtensionMembers param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DeleteProfileExtensionMembers.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DeleteProfileExtensionMembersResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DeleteProfileExtensionMembersResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.RetrieveTableRecords param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.RetrieveTableRecords.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.RetrieveTableRecordsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.RetrieveTableRecordsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.ChangeListSchema param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.ChangeListSchema.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.ChangeListSchemaResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.ChangeListSchemaResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetDocumentImages param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetDocumentImages.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetDocumentImagesResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetDocumentImagesResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetJobs param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetJobs.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetJobsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetJobsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.MergeListMembersRIID param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.MergeListMembersRIID.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.MergeListMembersRIIDResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.MergeListMembersRIIDResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetUpdated param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetUpdated.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.GetUpdatedResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.GetUpdatedResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.MergeTriggerSMS param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.MergeTriggerSMS.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.MergeTriggerSMSResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.MergeTriggerSMSResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DeleteFolder param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DeleteFolder.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.rsys.ws.DeleteFolderResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.rsys.ws.DeleteFolderResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.GetServerTimestamp param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.GetServerTimestamp.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.GetJobRunStatus param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.GetJobRunStatus.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.ListFolderObjects param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.ListFolderObjects.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.GetLaunchStatus param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.GetLaunchStatus.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.SetDocumentContent param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.SetDocumentContent.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.RetrieveLinkRecords param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.RetrieveLinkRecords.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.Login param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.Login.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.DeleteLinkRecords param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.DeleteLinkRecords.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.MoveContentLibraryItem param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.MoveContentLibraryItem.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.DeleteContentLibraryFolder param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.DeleteContentLibraryFolder.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.SetContentLibraryItem param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.SetContentLibraryItem.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.DeleteLinkTable param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.DeleteLinkTable.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.ListContentLibraryFolders param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.ListContentLibraryFolders.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.CopyContentLibraryItem param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.CopyContentLibraryItem.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.DeleteListMembers param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.DeleteListMembers.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.GetLaunchesForCampaign param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.GetLaunchesForCampaign.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.TriggerCampaignMessage param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.TriggerCampaignMessage.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.CreateTable param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.CreateTable.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.RetrieveListMembers param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.RetrieveListMembers.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.Logout param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.Logout.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.CreateFolder param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.CreateFolder.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.MergeTableRecordsWithPK param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.MergeTableRecordsWithPK.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.CreateContentLibraryFolder param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.CreateContentLibraryFolder.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.CreateTableWithPK param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.CreateTableWithPK.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.GetContentLibraryItem param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.GetContentLibraryItem.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.DeleteTable param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.DeleteTable.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.MergeTriggerEmail param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.MergeTriggerEmail.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.CreateContentLibraryItem param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.CreateContentLibraryItem.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.Copy param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.Copy.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.CreateDocument param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.CreateDocument.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.Move param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.Move.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.SetDocumentImages param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.SetDocumentImages.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.CloseCampaign param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.CloseCampaign.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.DeleteContentLibraryItem param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.DeleteContentLibraryItem.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.GetCampaignProperties param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.GetCampaignProperties.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.AuthenticateServer param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.AuthenticateServer.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.MergeLinkRecords param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.MergeLinkRecords.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.CreateCampaign param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.CreateCampaign.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.MergeTableRecords param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.MergeTableRecords.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.LaunchCampaign param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.LaunchCampaign.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.RetrieveProfileExtensionRecords param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.RetrieveProfileExtensionRecords.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.DeleteDocument param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.DeleteDocument.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.ScheduleCampaignLaunch param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.ScheduleCampaignLaunch.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.SetCampaignProperties param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.SetCampaignProperties.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.HaMergeTriggerEmail param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.HaMergeTriggerEmail.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.DeleteList param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.DeleteList.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.CreateProfileExtensionTable param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.CreateProfileExtensionTable.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.CreateSQLView param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.CreateSQLView.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.GetDocumentContent param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.GetDocumentContent.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.GetJobRuns param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.GetJobRuns.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.TruncateTable param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.TruncateTable.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.UnscheduleCampaignLaunch param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.UnscheduleCampaignLaunch.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.DescribeObjects param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.DescribeObjects.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.ChangeTableSchema param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.ChangeTableSchema.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.HaMergeTriggerSms param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.HaMergeTriggerSms.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.TriggerCustomEvent param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.TriggerCustomEvent.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.RunJob param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.RunJob.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.DeleteTableRecords param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.DeleteTableRecords.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.ListFolders param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.ListFolders.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.DoesContentLibraryFolderExist param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.DoesContentLibraryFolderExist.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.GetOpenLaunches param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.GetOpenLaunches.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.MergeIntoProfileExtension param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.MergeIntoProfileExtension.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.CreateLinkTable param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.CreateLinkTable.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.GetJobRunLog param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.GetJobRunLog.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.DeleteCampaign param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.DeleteCampaign.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.GetCampaignId param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.GetCampaignId.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.MergeListMembers param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.MergeListMembers.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.CreateList param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.CreateList.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.LoginWithCertificate param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.LoginWithCertificate.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.DeleteProfileExtensionMembers param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.DeleteProfileExtensionMembers.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.RetrieveTableRecords param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.RetrieveTableRecords.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.ChangeListSchema param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.ChangeListSchema.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.GetDocumentImages param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.GetDocumentImages.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.GetJobs param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.GetJobs.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.MergeListMembersRIID param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.MergeListMembersRIID.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.GetUpdated param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.GetUpdated.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.MergeTriggerSMS param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.MergeTriggerSMS.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.rsys.ws.DeleteFolder param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.rsys.ws.DeleteFolder.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             


        /**
        *  get the default envelope
        */
        private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory){
        return factory.getDefaultEnvelope();
        }


        private  java.lang.Object fromOM(
        org.apache.axiom.om.OMElement param,
        java.lang.Class type,
        java.util.Map extraNamespaces) throws org.apache.axis2.AxisFault{

        try {
        
                if (com.rsys.ws.GetServerTimestamp.class.equals(type)){
                
                           return com.rsys.ws.GetServerTimestamp.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetServerTimestampResponse.class.equals(type)){
                
                           return com.rsys.ws.GetServerTimestampResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetJobRunStatus.class.equals(type)){
                
                           return com.rsys.ws.GetJobRunStatus.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetJobRunStatusResponse.class.equals(type)){
                
                           return com.rsys.ws.GetJobRunStatusResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.ConnectFault.class.equals(type)){
                
                           return com.rsys.ws.fault.ConnectFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.ListFolderObjects.class.equals(type)){
                
                           return com.rsys.ws.ListFolderObjects.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.ListFolderObjectsResponse.class.equals(type)){
                
                           return com.rsys.ws.ListFolderObjectsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.FolderFault.class.equals(type)){
                
                           return com.rsys.ws.fault.FolderFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetLaunchStatus.class.equals(type)){
                
                           return com.rsys.ws.GetLaunchStatus.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetLaunchStatusResponse.class.equals(type)){
                
                           return com.rsys.ws.GetLaunchStatusResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.CampaignFault.class.equals(type)){
                
                           return com.rsys.ws.fault.CampaignFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SetDocumentContent.class.equals(type)){
                
                           return com.rsys.ws.SetDocumentContent.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SetDocumentContentResponse.class.equals(type)){
                
                           return com.rsys.ws.SetDocumentContentResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.DocumentFault.class.equals(type)){
                
                           return com.rsys.ws.fault.DocumentFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.RetrieveLinkRecords.class.equals(type)){
                
                           return com.rsys.ws.RetrieveLinkRecords.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.RetrieveLinkRecordsResponse.class.equals(type)){
                
                           return com.rsys.ws.RetrieveLinkRecordsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.LinkTableFault.class.equals(type)){
                
                           return com.rsys.ws.fault.LinkTableFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.Login.class.equals(type)){
                
                           return com.rsys.ws.Login.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.LoginResponse.class.equals(type)){
                
                           return com.rsys.ws.LoginResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.AccountFault.class.equals(type)){
                
                           return com.rsys.ws.fault.AccountFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DeleteLinkRecords.class.equals(type)){
                
                           return com.rsys.ws.DeleteLinkRecords.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DeleteLinkRecordsResponse.class.equals(type)){
                
                           return com.rsys.ws.DeleteLinkRecordsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.LinkTableFault.class.equals(type)){
                
                           return com.rsys.ws.fault.LinkTableFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.MoveContentLibraryItem.class.equals(type)){
                
                           return com.rsys.ws.MoveContentLibraryItem.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.MoveContentLibraryItemResponse.class.equals(type)){
                
                           return com.rsys.ws.MoveContentLibraryItemResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.DocumentFault.class.equals(type)){
                
                           return com.rsys.ws.fault.DocumentFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DeleteContentLibraryFolder.class.equals(type)){
                
                           return com.rsys.ws.DeleteContentLibraryFolder.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DeleteContentLibraryFolderResponse.class.equals(type)){
                
                           return com.rsys.ws.DeleteContentLibraryFolderResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.FolderFault.class.equals(type)){
                
                           return com.rsys.ws.fault.FolderFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SetContentLibraryItem.class.equals(type)){
                
                           return com.rsys.ws.SetContentLibraryItem.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SetContentLibraryItemResponse.class.equals(type)){
                
                           return com.rsys.ws.SetContentLibraryItemResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.DocumentFault.class.equals(type)){
                
                           return com.rsys.ws.fault.DocumentFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DeleteLinkTable.class.equals(type)){
                
                           return com.rsys.ws.DeleteLinkTable.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DeleteLinkTableResponse.class.equals(type)){
                
                           return com.rsys.ws.DeleteLinkTableResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.LinkTableFault.class.equals(type)){
                
                           return com.rsys.ws.fault.LinkTableFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.ListContentLibraryFolders.class.equals(type)){
                
                           return com.rsys.ws.ListContentLibraryFolders.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.ListContentLibraryFoldersResponse.class.equals(type)){
                
                           return com.rsys.ws.ListContentLibraryFoldersResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.FolderFault.class.equals(type)){
                
                           return com.rsys.ws.fault.FolderFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CopyContentLibraryItem.class.equals(type)){
                
                           return com.rsys.ws.CopyContentLibraryItem.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CopyContentLibraryItemResponse.class.equals(type)){
                
                           return com.rsys.ws.CopyContentLibraryItemResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.DocumentFault.class.equals(type)){
                
                           return com.rsys.ws.fault.DocumentFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DeleteListMembers.class.equals(type)){
                
                           return com.rsys.ws.DeleteListMembers.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DeleteListMembersResponse.class.equals(type)){
                
                           return com.rsys.ws.DeleteListMembersResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.ListFault.class.equals(type)){
                
                           return com.rsys.ws.fault.ListFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetLaunchesForCampaign.class.equals(type)){
                
                           return com.rsys.ws.GetLaunchesForCampaign.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetLaunchesForCampaignResponse.class.equals(type)){
                
                           return com.rsys.ws.GetLaunchesForCampaignResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.CampaignFault.class.equals(type)){
                
                           return com.rsys.ws.fault.CampaignFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.TriggerCampaignMessage.class.equals(type)){
                
                           return com.rsys.ws.TriggerCampaignMessage.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.TriggerCampaignMessageResponse.class.equals(type)){
                
                           return com.rsys.ws.TriggerCampaignMessageResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.DuplicateApiRequestFault.class.equals(type)){
                
                           return com.rsys.ws.fault.DuplicateApiRequestFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.TriggeredMessageFault.class.equals(type)){
                
                           return com.rsys.ws.fault.TriggeredMessageFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CreateTable.class.equals(type)){
                
                           return com.rsys.ws.CreateTable.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CreateTableResponse.class.equals(type)){
                
                           return com.rsys.ws.CreateTableResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.TableFault.class.equals(type)){
                
                           return com.rsys.ws.fault.TableFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.RetrieveListMembers.class.equals(type)){
                
                           return com.rsys.ws.RetrieveListMembers.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.RetrieveListMembersResponse.class.equals(type)){
                
                           return com.rsys.ws.RetrieveListMembersResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.ListFault.class.equals(type)){
                
                           return com.rsys.ws.fault.ListFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.Logout.class.equals(type)){
                
                           return com.rsys.ws.Logout.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.LogoutResponse.class.equals(type)){
                
                           return com.rsys.ws.LogoutResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CreateFolder.class.equals(type)){
                
                           return com.rsys.ws.CreateFolder.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CreateFolderResponse.class.equals(type)){
                
                           return com.rsys.ws.CreateFolderResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.FolderFault.class.equals(type)){
                
                           return com.rsys.ws.fault.FolderFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.MergeTableRecordsWithPK.class.equals(type)){
                
                           return com.rsys.ws.MergeTableRecordsWithPK.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.MergeTableRecordsWithPKResponse.class.equals(type)){
                
                           return com.rsys.ws.MergeTableRecordsWithPKResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.TableFault.class.equals(type)){
                
                           return com.rsys.ws.fault.TableFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CreateContentLibraryFolder.class.equals(type)){
                
                           return com.rsys.ws.CreateContentLibraryFolder.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CreateContentLibraryFolderResponse.class.equals(type)){
                
                           return com.rsys.ws.CreateContentLibraryFolderResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.FolderFault.class.equals(type)){
                
                           return com.rsys.ws.fault.FolderFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CreateTableWithPK.class.equals(type)){
                
                           return com.rsys.ws.CreateTableWithPK.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CreateTableWithPKResponse.class.equals(type)){
                
                           return com.rsys.ws.CreateTableWithPKResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.TableFault.class.equals(type)){
                
                           return com.rsys.ws.fault.TableFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetContentLibraryItem.class.equals(type)){
                
                           return com.rsys.ws.GetContentLibraryItem.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetContentLibraryItemResponse.class.equals(type)){
                
                           return com.rsys.ws.GetContentLibraryItemResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.DocumentFault.class.equals(type)){
                
                           return com.rsys.ws.fault.DocumentFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DeleteTable.class.equals(type)){
                
                           return com.rsys.ws.DeleteTable.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DeleteTableResponse.class.equals(type)){
                
                           return com.rsys.ws.DeleteTableResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.TableFault.class.equals(type)){
                
                           return com.rsys.ws.fault.TableFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.MergeTriggerEmail.class.equals(type)){
                
                           return com.rsys.ws.MergeTriggerEmail.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.MergeTriggerEmailResponse.class.equals(type)){
                
                           return com.rsys.ws.MergeTriggerEmailResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.DuplicateApiRequestFault.class.equals(type)){
                
                           return com.rsys.ws.fault.DuplicateApiRequestFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.TriggeredMessageFault.class.equals(type)){
                
                           return com.rsys.ws.fault.TriggeredMessageFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CreateContentLibraryItem.class.equals(type)){
                
                           return com.rsys.ws.CreateContentLibraryItem.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CreateContentLibraryItemResponse.class.equals(type)){
                
                           return com.rsys.ws.CreateContentLibraryItemResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.DocumentFault.class.equals(type)){
                
                           return com.rsys.ws.fault.DocumentFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.Copy.class.equals(type)){
                
                           return com.rsys.ws.Copy.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CopyResponse.class.equals(type)){
                
                           return com.rsys.ws.CopyResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.ObjectFault.class.equals(type)){
                
                           return com.rsys.ws.fault.ObjectFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CreateDocument.class.equals(type)){
                
                           return com.rsys.ws.CreateDocument.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CreateDocumentResponse.class.equals(type)){
                
                           return com.rsys.ws.CreateDocumentResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.DocumentFault.class.equals(type)){
                
                           return com.rsys.ws.fault.DocumentFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.Move.class.equals(type)){
                
                           return com.rsys.ws.Move.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.MoveResponse.class.equals(type)){
                
                           return com.rsys.ws.MoveResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.ObjectFault.class.equals(type)){
                
                           return com.rsys.ws.fault.ObjectFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SetDocumentImages.class.equals(type)){
                
                           return com.rsys.ws.SetDocumentImages.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SetDocumentImagesResponse.class.equals(type)){
                
                           return com.rsys.ws.SetDocumentImagesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.DocumentFault.class.equals(type)){
                
                           return com.rsys.ws.fault.DocumentFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CloseCampaign.class.equals(type)){
                
                           return com.rsys.ws.CloseCampaign.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CloseCampaignResponse.class.equals(type)){
                
                           return com.rsys.ws.CloseCampaignResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.CampaignFault.class.equals(type)){
                
                           return com.rsys.ws.fault.CampaignFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DeleteContentLibraryItem.class.equals(type)){
                
                           return com.rsys.ws.DeleteContentLibraryItem.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DeleteContentLibraryItemResponse.class.equals(type)){
                
                           return com.rsys.ws.DeleteContentLibraryItemResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.DocumentFault.class.equals(type)){
                
                           return com.rsys.ws.fault.DocumentFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetCampaignProperties.class.equals(type)){
                
                           return com.rsys.ws.GetCampaignProperties.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetCampaignPropertiesResponse.class.equals(type)){
                
                           return com.rsys.ws.GetCampaignPropertiesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.CampaignFault.class.equals(type)){
                
                           return com.rsys.ws.fault.CampaignFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.AuthenticateServer.class.equals(type)){
                
                           return com.rsys.ws.AuthenticateServer.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.AuthenticateServerResponse.class.equals(type)){
                
                           return com.rsys.ws.AuthenticateServerResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.AccountFault.class.equals(type)){
                
                           return com.rsys.ws.fault.AccountFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.MergeLinkRecords.class.equals(type)){
                
                           return com.rsys.ws.MergeLinkRecords.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.MergeLinkRecordsResponse.class.equals(type)){
                
                           return com.rsys.ws.MergeLinkRecordsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.LinkTableFault.class.equals(type)){
                
                           return com.rsys.ws.fault.LinkTableFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CreateCampaign.class.equals(type)){
                
                           return com.rsys.ws.CreateCampaign.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CreateCampaignResponse.class.equals(type)){
                
                           return com.rsys.ws.CreateCampaignResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.CampaignFault.class.equals(type)){
                
                           return com.rsys.ws.fault.CampaignFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.MergeTableRecords.class.equals(type)){
                
                           return com.rsys.ws.MergeTableRecords.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.MergeTableRecordsResponse.class.equals(type)){
                
                           return com.rsys.ws.MergeTableRecordsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.TableFault.class.equals(type)){
                
                           return com.rsys.ws.fault.TableFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.LaunchCampaign.class.equals(type)){
                
                           return com.rsys.ws.LaunchCampaign.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.LaunchCampaignResponse.class.equals(type)){
                
                           return com.rsys.ws.LaunchCampaignResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.CampaignFault.class.equals(type)){
                
                           return com.rsys.ws.fault.CampaignFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.RetrieveProfileExtensionRecords.class.equals(type)){
                
                           return com.rsys.ws.RetrieveProfileExtensionRecords.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.RetrieveProfileExtensionRecordsResponse.class.equals(type)){
                
                           return com.rsys.ws.RetrieveProfileExtensionRecordsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.ListExtensionFault.class.equals(type)){
                
                           return com.rsys.ws.fault.ListExtensionFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DeleteDocument.class.equals(type)){
                
                           return com.rsys.ws.DeleteDocument.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DeleteDocumentResponse.class.equals(type)){
                
                           return com.rsys.ws.DeleteDocumentResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.DocumentFault.class.equals(type)){
                
                           return com.rsys.ws.fault.DocumentFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.ScheduleCampaignLaunch.class.equals(type)){
                
                           return com.rsys.ws.ScheduleCampaignLaunch.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.ScheduleCampaignLaunchResponse.class.equals(type)){
                
                           return com.rsys.ws.ScheduleCampaignLaunchResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.CampaignFault.class.equals(type)){
                
                           return com.rsys.ws.fault.CampaignFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SetCampaignProperties.class.equals(type)){
                
                           return com.rsys.ws.SetCampaignProperties.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SetCampaignPropertiesResponse.class.equals(type)){
                
                           return com.rsys.ws.SetCampaignPropertiesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.CampaignFault.class.equals(type)){
                
                           return com.rsys.ws.fault.CampaignFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.HaMergeTriggerEmail.class.equals(type)){
                
                           return com.rsys.ws.HaMergeTriggerEmail.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.HaMergeTriggerEmailResponse.class.equals(type)){
                
                           return com.rsys.ws.HaMergeTriggerEmailResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.DuplicateApiRequestFault.class.equals(type)){
                
                           return com.rsys.ws.fault.DuplicateApiRequestFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnrecoverableErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnrecoverableErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.TriggeredMessageFault.class.equals(type)){
                
                           return com.rsys.ws.fault.TriggeredMessageFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DeleteList.class.equals(type)){
                
                           return com.rsys.ws.DeleteList.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DeleteListResponse.class.equals(type)){
                
                           return com.rsys.ws.DeleteListResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.ListFault.class.equals(type)){
                
                           return com.rsys.ws.fault.ListFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CreateProfileExtensionTable.class.equals(type)){
                
                           return com.rsys.ws.CreateProfileExtensionTable.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CreateProfileExtensionTableResponse.class.equals(type)){
                
                           return com.rsys.ws.CreateProfileExtensionTableResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.ListFault.class.equals(type)){
                
                           return com.rsys.ws.fault.ListFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CreateSQLView.class.equals(type)){
                
                           return com.rsys.ws.CreateSQLView.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CreateSQLViewResponse.class.equals(type)){
                
                           return com.rsys.ws.CreateSQLViewResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.TableFault.class.equals(type)){
                
                           return com.rsys.ws.fault.TableFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetDocumentContent.class.equals(type)){
                
                           return com.rsys.ws.GetDocumentContent.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetDocumentContentResponse.class.equals(type)){
                
                           return com.rsys.ws.GetDocumentContentResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.DocumentFault.class.equals(type)){
                
                           return com.rsys.ws.fault.DocumentFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetJobRuns.class.equals(type)){
                
                           return com.rsys.ws.GetJobRuns.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetJobRunsResponse.class.equals(type)){
                
                           return com.rsys.ws.GetJobRunsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.ConnectFault.class.equals(type)){
                
                           return com.rsys.ws.fault.ConnectFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.TruncateTable.class.equals(type)){
                
                           return com.rsys.ws.TruncateTable.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.TruncateTableResponse.class.equals(type)){
                
                           return com.rsys.ws.TruncateTableResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.TableFault.class.equals(type)){
                
                           return com.rsys.ws.fault.TableFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.UnscheduleCampaignLaunch.class.equals(type)){
                
                           return com.rsys.ws.UnscheduleCampaignLaunch.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.UnscheduleCampaignLaunchResponse.class.equals(type)){
                
                           return com.rsys.ws.UnscheduleCampaignLaunchResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.CampaignFault.class.equals(type)){
                
                           return com.rsys.ws.fault.CampaignFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DescribeObjects.class.equals(type)){
                
                           return com.rsys.ws.DescribeObjects.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DescribeObjectsResponse.class.equals(type)){
                
                           return com.rsys.ws.DescribeObjectsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.ObjectFault.class.equals(type)){
                
                           return com.rsys.ws.fault.ObjectFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.ChangeTableSchema.class.equals(type)){
                
                           return com.rsys.ws.ChangeTableSchema.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.ChangeTableSchemaResponse.class.equals(type)){
                
                           return com.rsys.ws.ChangeTableSchemaResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.TableFault.class.equals(type)){
                
                           return com.rsys.ws.fault.TableFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.HaMergeTriggerSms.class.equals(type)){
                
                           return com.rsys.ws.HaMergeTriggerSms.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.HaMergeTriggerSmsResponse.class.equals(type)){
                
                           return com.rsys.ws.HaMergeTriggerSmsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.DuplicateApiRequestFault.class.equals(type)){
                
                           return com.rsys.ws.fault.DuplicateApiRequestFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnrecoverableErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnrecoverableErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.TriggeredMessageFault.class.equals(type)){
                
                           return com.rsys.ws.fault.TriggeredMessageFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.TriggerCustomEvent.class.equals(type)){
                
                           return com.rsys.ws.TriggerCustomEvent.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.TriggerCustomEventResponse.class.equals(type)){
                
                           return com.rsys.ws.TriggerCustomEventResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.CustomEventFault.class.equals(type)){
                
                           return com.rsys.ws.fault.CustomEventFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.DuplicateApiRequestFault.class.equals(type)){
                
                           return com.rsys.ws.fault.DuplicateApiRequestFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.RunJob.class.equals(type)){
                
                           return com.rsys.ws.RunJob.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.RunJobResponse.class.equals(type)){
                
                           return com.rsys.ws.RunJobResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.ConnectFault.class.equals(type)){
                
                           return com.rsys.ws.fault.ConnectFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DeleteTableRecords.class.equals(type)){
                
                           return com.rsys.ws.DeleteTableRecords.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DeleteTableRecordsResponse.class.equals(type)){
                
                           return com.rsys.ws.DeleteTableRecordsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.TableFault.class.equals(type)){
                
                           return com.rsys.ws.fault.TableFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.ListFolders.class.equals(type)){
                
                           return com.rsys.ws.ListFolders.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.ListFoldersResponse.class.equals(type)){
                
                           return com.rsys.ws.ListFoldersResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DoesContentLibraryFolderExist.class.equals(type)){
                
                           return com.rsys.ws.DoesContentLibraryFolderExist.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DoesContentLibraryFolderExistResponse.class.equals(type)){
                
                           return com.rsys.ws.DoesContentLibraryFolderExistResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.FolderFault.class.equals(type)){
                
                           return com.rsys.ws.fault.FolderFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetOpenLaunches.class.equals(type)){
                
                           return com.rsys.ws.GetOpenLaunches.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetOpenLaunchesResponse.class.equals(type)){
                
                           return com.rsys.ws.GetOpenLaunchesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.AccountFault.class.equals(type)){
                
                           return com.rsys.ws.fault.AccountFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.MergeIntoProfileExtension.class.equals(type)){
                
                           return com.rsys.ws.MergeIntoProfileExtension.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.MergeIntoProfileExtensionResponse.class.equals(type)){
                
                           return com.rsys.ws.MergeIntoProfileExtensionResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.ListExtensionFault.class.equals(type)){
                
                           return com.rsys.ws.fault.ListExtensionFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CreateLinkTable.class.equals(type)){
                
                           return com.rsys.ws.CreateLinkTable.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CreateLinkTableResponse.class.equals(type)){
                
                           return com.rsys.ws.CreateLinkTableResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.LinkTableFault.class.equals(type)){
                
                           return com.rsys.ws.fault.LinkTableFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetJobRunLog.class.equals(type)){
                
                           return com.rsys.ws.GetJobRunLog.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetJobRunLogResponse.class.equals(type)){
                
                           return com.rsys.ws.GetJobRunLogResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.ConnectFault.class.equals(type)){
                
                           return com.rsys.ws.fault.ConnectFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DeleteCampaign.class.equals(type)){
                
                           return com.rsys.ws.DeleteCampaign.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DeleteCampaignResponse.class.equals(type)){
                
                           return com.rsys.ws.DeleteCampaignResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.CampaignFault.class.equals(type)){
                
                           return com.rsys.ws.fault.CampaignFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetCampaignId.class.equals(type)){
                
                           return com.rsys.ws.GetCampaignId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetCampaignIdResponse.class.equals(type)){
                
                           return com.rsys.ws.GetCampaignIdResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.CampaignFault.class.equals(type)){
                
                           return com.rsys.ws.fault.CampaignFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.MergeListMembers.class.equals(type)){
                
                           return com.rsys.ws.MergeListMembers.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.MergeListMembersResponse.class.equals(type)){
                
                           return com.rsys.ws.MergeListMembersResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.ListFault.class.equals(type)){
                
                           return com.rsys.ws.fault.ListFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CreateList.class.equals(type)){
                
                           return com.rsys.ws.CreateList.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.CreateListResponse.class.equals(type)){
                
                           return com.rsys.ws.CreateListResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.ListFault.class.equals(type)){
                
                           return com.rsys.ws.fault.ListFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.LoginWithCertificate.class.equals(type)){
                
                           return com.rsys.ws.LoginWithCertificate.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.LoginWithCertificateResponse.class.equals(type)){
                
                           return com.rsys.ws.LoginWithCertificateResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.AccountFault.class.equals(type)){
                
                           return com.rsys.ws.fault.AccountFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.AuthSessionHeader.class.equals(type)){
                
                           return com.rsys.ws.AuthSessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DeleteProfileExtensionMembers.class.equals(type)){
                
                           return com.rsys.ws.DeleteProfileExtensionMembers.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DeleteProfileExtensionMembersResponse.class.equals(type)){
                
                           return com.rsys.ws.DeleteProfileExtensionMembersResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.ListExtensionFault.class.equals(type)){
                
                           return com.rsys.ws.fault.ListExtensionFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.RetrieveTableRecords.class.equals(type)){
                
                           return com.rsys.ws.RetrieveTableRecords.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.RetrieveTableRecordsResponse.class.equals(type)){
                
                           return com.rsys.ws.RetrieveTableRecordsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.TableFault.class.equals(type)){
                
                           return com.rsys.ws.fault.TableFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.ChangeListSchema.class.equals(type)){
                
                           return com.rsys.ws.ChangeListSchema.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.ChangeListSchemaResponse.class.equals(type)){
                
                           return com.rsys.ws.ChangeListSchemaResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.ListFault.class.equals(type)){
                
                           return com.rsys.ws.fault.ListFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetDocumentImages.class.equals(type)){
                
                           return com.rsys.ws.GetDocumentImages.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetDocumentImagesResponse.class.equals(type)){
                
                           return com.rsys.ws.GetDocumentImagesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.DocumentFault.class.equals(type)){
                
                           return com.rsys.ws.fault.DocumentFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetJobs.class.equals(type)){
                
                           return com.rsys.ws.GetJobs.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetJobsResponse.class.equals(type)){
                
                           return com.rsys.ws.GetJobsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.ConnectFault.class.equals(type)){
                
                           return com.rsys.ws.fault.ConnectFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.MergeListMembersRIID.class.equals(type)){
                
                           return com.rsys.ws.MergeListMembersRIID.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.MergeListMembersRIIDResponse.class.equals(type)){
                
                           return com.rsys.ws.MergeListMembersRIIDResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.ListFault.class.equals(type)){
                
                           return com.rsys.ws.fault.ListFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetUpdated.class.equals(type)){
                
                           return com.rsys.ws.GetUpdated.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.GetUpdatedResponse.class.equals(type)){
                
                           return com.rsys.ws.GetUpdatedResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.ListFault.class.equals(type)){
                
                           return com.rsys.ws.fault.ListFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.MergeTriggerSMS.class.equals(type)){
                
                           return com.rsys.ws.MergeTriggerSMS.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.MergeTriggerSMSResponse.class.equals(type)){
                
                           return com.rsys.ws.MergeTriggerSMSResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.DuplicateApiRequestFault.class.equals(type)){
                
                           return com.rsys.ws.fault.DuplicateApiRequestFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.TriggeredMessageFault.class.equals(type)){
                
                           return com.rsys.ws.fault.TriggeredMessageFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DeleteFolder.class.equals(type)){
                
                           return com.rsys.ws.DeleteFolder.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.DeleteFolderResponse.class.equals(type)){
                
                           return com.rsys.ws.DeleteFolderResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.FolderFault.class.equals(type)){
                
                           return com.rsys.ws.fault.FolderFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.fault.UnexpectedErrorFault.class.equals(type)){
                
                           return com.rsys.ws.fault.UnexpectedErrorFault.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.rsys.ws.SessionHeader.class.equals(type)){
                
                           return com.rsys.ws.SessionHeader.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
        } catch (java.lang.Exception e) {
        throw org.apache.axis2.AxisFault.makeFault(e);
        }
           return null;
        }



    
   }
   